[{"categories":["LaTeX"],"content":"本文介绍如何使用 LaTeX 绘制《火影忍者疾风传》中写轮眼和轮回眼的图像。","date":"2025-10-19","objectID":"/zh-cn/menggambar-sharingan-dan-rinnegan-dengan-latex/","series":null,"tags":["LaTeX"],"title":"使用 LaTeX 绘制写轮眼与轮回眼","uri":"/zh-cn/menggambar-sharingan-dan-rinnegan-dengan-latex/"},{"categories":["LaTeX"],"content":"本文讲述了如何使用 LaTeX（主要使用 TikZ 包）绘制《火影忍者疾风传》中最具代表性的两种眼睛——写轮眼（Sharingan） 和 轮回眼（Rinnegan）。 在动画《火影忍者》中，有几种强大的“瞳术”。轮回眼（Rinnegan） 与 写轮眼（Sharingan） 是三大瞳术（Dōjutsu）中最强的两种。 写轮眼是宇智波一族的血继限界，可以复制忍术、幻术和体术等。 轮回眼 则是结合了大筒木因陀罗与阿修罗的力量而觉醒，拥有生死掌控之能，甚至能在瞬间抽取灵魂。 ","date":"2025-10-19","objectID":"/zh-cn/menggambar-sharingan-dan-rinnegan-dengan-latex/:0:0","series":null,"tags":["LaTeX"],"title":"使用 LaTeX 绘制写轮眼与轮回眼","uri":"/zh-cn/menggambar-sharingan-dan-rinnegan-dengan-latex/#"},{"categories":["LaTeX"],"content":" 1 简介本文将介绍如何利用 LaTeX 绘制 写轮眼 与 轮回眼。 主要使用的宏包为 TikZ 和 fadings，颜色定义使用 \\definecolor 命令。 ","date":"2025-10-19","objectID":"/zh-cn/menggambar-sharingan-dan-rinnegan-dengan-latex/:1:0","series":null,"tags":["LaTeX"],"title":"使用 LaTeX 绘制写轮眼与轮回眼","uri":"/zh-cn/menggambar-sharingan-dan-rinnegan-dengan-latex/#简介"},{"categories":["LaTeX"],"content":" 2 1. 写轮眼 (Sharingan)在《火影忍者》中，写轮眼有多种形态： 普通写轮眼（带勾玉） 万花筒写轮眼（Mangekyō Sharingan） 永恒万花筒写轮眼（Eternal Mangekyō Sharingan） 这里我们绘制的是最基本的三勾玉写轮眼。 ","date":"2025-10-19","objectID":"/zh-cn/menggambar-sharingan-dan-rinnegan-dengan-latex/:2:0","series":null,"tags":["LaTeX"],"title":"使用 LaTeX 绘制写轮眼与轮回眼","uri":"/zh-cn/menggambar-sharingan-dan-rinnegan-dengan-latex/#1-写轮眼-sharingan"},{"categories":["LaTeX"],"content":" 2.1 步骤： 使用 standalone 文档类并启用 tikz： latex \\documentclass[tikz]{standalone} 调用 TikZ 库并创建渐变效果： latex \\usetikzlibrary{fadings} \\tikzfading[name=mripate sasuke, inner color=transparent!0, outer color=transparent!40] 开始绘图环境： latex \\begin{tikzpicture} ... \\end{tikzpicture} 绘制黑色背景： latex \\fill[black] (-4,-4) rectangle (4,4); 绘制红色主圆（眼球）： latex \\fill[red, path fading=mripate sasuke] (0,0) circle (3); 添加黑色内圈和瞳孔： latex \\draw[thick] (0,0) circle (2); \\fill (0,0) circle (0.3); 绘制三勾玉符号： latex \\foreach\\i in {80,200,320} \\fill[rotate=\\i] (2,0) ++ (-30:0.2) arc (330:90:0.2) arc (90:-60:0.3) to[out=60,in=-30] cycle; 结束文档： latex \\end{document} 最终效果： 写轮眼 ","date":"2025-10-19","objectID":"/zh-cn/menggambar-sharingan-dan-rinnegan-dengan-latex/:2:1","series":null,"tags":["LaTeX"],"title":"使用 LaTeX 绘制写轮眼与轮回眼","uri":"/zh-cn/menggambar-sharingan-dan-rinnegan-dengan-latex/#步骤"},{"categories":["LaTeX"],"content":" 3 2. 轮回眼 (Rinnegan)轮回眼由因陀罗与阿修罗的力量结合而生，拥有“六道之力”，可通过不同身体施展六种不同能力（例如佩恩与带土）。 ","date":"2025-10-19","objectID":"/zh-cn/menggambar-sharingan-dan-rinnegan-dengan-latex/:3:0","series":null,"tags":["LaTeX"],"title":"使用 LaTeX 绘制写轮眼与轮回眼","uri":"/zh-cn/menggambar-sharingan-dan-rinnegan-dengan-latex/#2-轮回眼-rinnegan"},{"categories":["LaTeX"],"content":" 3.1 步骤： 使用 standalone 文档类： latex \\documentclass[tikz]{standalone} 定义颜色与基础形状： latex \\definecolor{rinnegan}{HTML}{C7B7D1} \\newcommand{\\mripaterinnegan}{ (-10.3,-4.6) to[out=5,in=180] (0,-4.4) to[out=0,in=250,looseness=1.2] (10.6,4) to[out=160,in=55,looseness=1.2] cycle; } 绘制主体： latex \\begin{tikzpicture} ... \\end{tikzpicture} 绘制轮回眼主图及瞳孔： latex \\fill[rinnegan]\\mripaterinnegan; \\fill (0,0) circle (0.4); 添加同心圆线条： latex \\begin{scope} \\clip\\mripaterinnegan; \\foreach\\i in {1.3,2.7,4.1,5.8,7.3,8.9,10.5} \\draw (0,0) circle (\\i); \\fill[gray,fill opacity=0.8,shift={(-0.4,-0.5)},even odd rule] (-12,-6) rectangle (12,6) \\mripaterinnegan; \\end{scope} 加深外部区域： latex \\fill[even odd rule] (-12,-10) rectangle (12,8) \\mripaterinnegan; 结束文档： latex \\end{document} 最终效果： 轮回眼 ","date":"2025-10-19","objectID":"/zh-cn/menggambar-sharingan-dan-rinnegan-dengan-latex/:3:1","series":null,"tags":["LaTeX"],"title":"使用 LaTeX 绘制写轮眼与轮回眼","uri":"/zh-cn/menggambar-sharingan-dan-rinnegan-dengan-latex/#步骤-1"},{"categories":["LaTeX"],"content":" 4 3. 总结通过本练习，我们学习了如何利用 LaTeX 和 TikZ 以数学方式绘制《火影忍者》中独特的瞳术符号。 这一过程展示了坐标、点、线与面如何组合形成精确而美观的图像——完美体现了 几何与 TeX 逻辑之美。是不是很有趣呢？😄 ","date":"2025-10-19","objectID":"/zh-cn/menggambar-sharingan-dan-rinnegan-dengan-latex/:4:0","series":null,"tags":["LaTeX"],"title":"使用 LaTeX 绘制写轮眼与轮回眼","uri":"/zh-cn/menggambar-sharingan-dan-rinnegan-dengan-latex/#3-总结"},{"categories":["LaTeX"],"content":" 5 参考资料 Drawing of Sharingan and Rinnegan Eyes. https://tex.stackexchange.com/questions/680546/drawing-of-sharingan-and-rinnegan-eyes （访问时间：2023 年 3 月 24 日） 写轮眼 vs 轮回眼：谁更强？ https://www.greenscene.co.id/2020/08/17/naruto-sharingan-vs-rinnegan-mana-yang-lebih-kuat/ （访问时间：2023 年 3 月 25 日） ","date":"2025-10-19","objectID":"/zh-cn/menggambar-sharingan-dan-rinnegan-dengan-latex/:5:0","series":null,"tags":["LaTeX"],"title":"使用 LaTeX 绘制写轮眼与轮回眼","uri":"/zh-cn/menggambar-sharingan-dan-rinnegan-dengan-latex/#参考资料"},{"categories":["Linux"],"content":"本文介紹 LaTeX 編譯的工作原理、可用的編譯器類型、處理順序，以及如何高效地解決錯誤。","date":"2025-10-17","objectID":"/zh-cn/kompilasi-dokumen-di-latex/","series":null,"tags":["作業系統","Linux"],"title":"技術指南：完整且高效地編譯 LaTeX 文件的方法","uri":"/zh-cn/kompilasi-dokumen-di-latex/"},{"categories":["Linux"],"content":"編譯（compilation）是將 LaTeX 命令轉換為可列印文件的過程。 本文介紹 LaTeX 的工作方式、可用的編譯器（compiler）類型、處理順序，以及如何高效地解決錯誤。 ","date":"2025-10-17","objectID":"/zh-cn/kompilasi-dokumen-di-latex/:0:0","series":null,"tags":["作業系統","Linux"],"title":"技術指南：完整且高效地編譯 LaTeX 文件的方法","uri":"/zh-cn/kompilasi-dokumen-di-latex/#"},{"categories":["Linux"],"content":" 10 前言LaTeX 是一種專為科學與技術文本設計的高品質文件排版系統。 與一般的文字處理器（word processor）不同，LaTeX 文件必須先編譯（compile），才能將 .tex 檔案轉換為最終輸出格式，例如 .pdf、.dvi 或 .ps。 注意 注意：本文由人工智慧技術協助生成，並經人工審核以確保資訊的準確性與清晰度。 ","date":"2025-10-17","objectID":"/zh-cn/kompilasi-dokumen-di-latex/:1:0","series":null,"tags":["作業系統","Linux"],"title":"技術指南：完整且高效地編譯 LaTeX 文件的方法","uri":"/zh-cn/kompilasi-dokumen-di-latex/#前言"},{"categories":["Linux"],"content":" 11 1. 什麼是 LaTeX 編譯（Compilation）？LaTeX 編譯是由編譯器（compiler）讀取來源檔（通常副檔名為 .tex）、解析指令（如 \\section{}、\\usepackage{} 等），並輸出最終檔案（如 .pdf）的過程。 簡而言之： text dokumen.tex → [compiler] → dokumen.pdf 這個過程與 Microsoft Word 等一般文字處理器不同，LaTeX 將內容撰寫與輸出生成分離，讓格式更一致且可重現。 ","date":"2025-10-17","objectID":"/zh-cn/kompilasi-dokumen-di-latex/:2:0","series":null,"tags":["作業系統","Linux"],"title":"技術指南：完整且高效地編譯 LaTeX 文件的方法","uri":"/zh-cn/kompilasi-dokumen-di-latex/#1-什麼是-latex-編譯compilation"},{"categories":["Linux"],"content":" 12 2. 常見的 LaTeX 編譯器（Compiler）類型 編譯器 主要輸出格式 優點 缺點 pdfLaTeX 直接輸出 PDF 快速、穩定、與許多套件相容 僅支援 TeX 字型與 ASCII 輸入 XeLaTeX PDF 支援 Unicode 與系統字型（TTF/OTF） 編譯速度稍慢 LuaLaTeX PDF 支援 Lua 腳本，效能高 對舊套件相容性較低 LaTeX → DVI → PS → PDF PDF/DVI 傳統方法，適合舊專案 編譯流程較長，現今少用 💡 建議： 一般文件可使用 pdfLaTeX；若包含非拉丁字母（如中文、日文、阿拉伯文），建議使用 XeLaTeX；若需圖形或程式化控制，可用 LuaLaTeX。 ","date":"2025-10-17","objectID":"/zh-cn/kompilasi-dokumen-di-latex/:3:0","series":null,"tags":["作業系統","Linux"],"title":"技術指南：完整且高效地編譯 LaTeX 文件的方法","uri":"/zh-cn/kompilasi-dokumen-di-latex/#2-常見的-latex-編譯器compiler類型"},{"categories":["Linux"],"content":" 13 3. 文件編譯流程當執行編譯時，LaTeX 系統會依序進行以下階段： 讀取 .tex 檔案 — 處理前導區（preamble）與內容。 建立文件結構 — 生成目錄、標籤、參照與索引。 排版數學符號、圖片與表格。 生成輔助檔（auxiliary files）： .aux → 用於交叉引用（cross-reference，如 \\ref, \\cite） .toc → 目錄（table of contents） .log → 錯誤記錄 產生最終輸出檔（如 .pdf 或 .dvi）。 由於使用了輔助檔，通常需多次編譯以更新交叉引用、目錄或參考文獻。 ","date":"2025-10-17","objectID":"/zh-cn/kompilasi-dokumen-di-latex/:4:0","series":null,"tags":["作業系統","Linux"],"title":"技術指南：完整且高效地編譯 LaTeX 文件的方法","uri":"/zh-cn/kompilasi-dokumen-di-latex/#3-文件編譯流程"},{"categories":["Linux"],"content":" 14 4. 在終端機（Terminal）中進行編譯若使用本機系統（Windows、macOS、Linux），可透過命令列（command line）進行： bash pdflatex dokumen.tex bibtex dokumen pdflatex dokumen.tex pdflatex dokumen.tex 步驟說明： 第一次編譯：生成 .aux 和 .toc。 執行 bibtex（若包含參考文獻）。 再次編譯以更新引用。 最後一次編譯生成最終輸出。 ⚙️ 若使用 biber（搭配 biblatex），請將 bibtex 改為 biber dokumen。 ","date":"2025-10-17","objectID":"/zh-cn/kompilasi-dokumen-di-latex/:5:0","series":null,"tags":["作業系統","Linux"],"title":"技術指南：完整且高效地編譯 LaTeX 文件的方法","uri":"/zh-cn/kompilasi-dokumen-di-latex/#4-在終端機terminal中進行編譯"},{"categories":["Linux"],"content":" 15 5. 在編輯器（Editor）中編譯除終端機外，也可直接於 LaTeX 編輯器中執行編譯。 Tampilan antarmuka di Overleaf ","date":"2025-10-17","objectID":"/zh-cn/kompilasi-dokumen-di-latex/:6:0","series":null,"tags":["作業系統","Linux"],"title":"技術指南：完整且高效地編譯 LaTeX 文件的方法","uri":"/zh-cn/kompilasi-dokumen-di-latex/#5-在編輯器editor中編譯"},{"categories":["Linux"],"content":" 15.1 5.1. Overleaf（線上） 每次儲存後自動編譯。 可於 Menu → Compiler → pdfLaTeX/XeLaTeX 中選擇編譯器。 無需本機安裝。 ","date":"2025-10-17","objectID":"/zh-cn/kompilasi-dokumen-di-latex/:6:1","series":null,"tags":["作業系統","Linux"],"title":"技術指南：完整且高效地編譯 LaTeX 文件的方法","uri":"/zh-cn/kompilasi-dokumen-di-latex/#51-overleaf線上"},{"categories":["Linux"],"content":" 15.2 5.2. TeXworks / TeXstudio（離線） 按 Ctrl + T 或點擊「Typeset」圖示。 可於下拉選單中選擇編譯器。 適合 Windows/macOS 使用者。 Tampilan antarmuka di TeXstudio ","date":"2025-10-17","objectID":"/zh-cn/kompilasi-dokumen-di-latex/:6:2","series":null,"tags":["作業系統","Linux"],"title":"技術指南：完整且高效地編譯 LaTeX 文件的方法","uri":"/zh-cn/kompilasi-dokumen-di-latex/#52-texworks--texstudio離線"},{"categories":["Linux"],"content":" 15.3 5.3. Visual Studio Code + LaTeX Workshop 現代化環境中最受歡迎的擴充套件。 支援「自動編譯鏈」（build chain），例如：pdflatex → bibtex → pdflatex → pdflatex。 設定檔位於 .vscode/settings.json。 範例設定： json \"latex-workshop.latex.recipes\": [ { \"name\": \"pdflatex -\u003e bibtex -\u003e pdflatex x2\", \"tools\": [\"pdflatex\", \"bibtex\", \"pdflatex\", \"pdflatex\"] } ] ","date":"2025-10-17","objectID":"/zh-cn/kompilasi-dokumen-di-latex/:6:3","series":null,"tags":["作業系統","Linux"],"title":"技術指南：完整且高效地編譯 LaTeX 文件的方法","uri":"/zh-cn/kompilasi-dokumen-di-latex/#53-visual-studio-code--latex-workshop"},{"categories":["Linux"],"content":" 16 6. 常見錯誤與解決方式 錯誤訊息 原因 解決方案 ! Undefined control sequence. 指令未定義 確認是否已載入所需套件（\\usepackage{}） ! LaTeX Error: File 'xxx.sty' not found. 缺少套件 透過套件管理器安裝（tlmgr install xxx） ! Missing $ inserted. 數學模式錯誤 確保數學公式以 $...$ 或 \\[...\\] 包圍 Package hyperref Warning: Token not allowed in a PDF string 超連結中有非法字元 使用 {} 包裹或更改特殊字元 參照失效或空白 尚未多次編譯 請重複編譯 2–3 次 🧩 提示： 可查看 dokumen.log 檔以獲取錯誤詳細資訊與行號。 ","date":"2025-10-17","objectID":"/zh-cn/kompilasi-dokumen-di-latex/:7:0","series":null,"tags":["作業系統","Linux"],"title":"技術指南：完整且高效地編譯 LaTeX 文件的方法","uri":"/zh-cn/kompilasi-dokumen-di-latex/#6-常見錯誤與解決方式"},{"categories":["Linux"],"content":" 17 7. 現代化工作流程與自動化現今許多用戶利用自動化工具提升編譯效率： latexmk — 自動執行所有必要步驟（LaTeX、BibTeX、索引等） bash latexmk -pdf dokumen.tex arara — 基於註解指令的編譯系統 latex % arara: pdflatex % arara: bibtex % arara: pdflatex % arara: pdflatex Makefile — 適用於大型多檔專案。 使用這些自動化工具，只需一條指令即可完成整個編譯流程。 ","date":"2025-10-17","objectID":"/zh-cn/kompilasi-dokumen-di-latex/:8:0","series":null,"tags":["作業系統","Linux"],"title":"技術指南：完整且高效地編譯 LaTeX 文件的方法","uri":"/zh-cn/kompilasi-dokumen-di-latex/#7-現代化工作流程與自動化"},{"categories":["Linux"],"content":" 18 8. 結論編譯是 LaTeX 系統的核心，負責將原始碼轉換為高品質輸出文件。 理解編譯器（compiler）的工作方式、執行順序及錯誤處理，能顯著提升撰寫學術文件的效率與專業度。 無論您使用 Overleaf、VS Code 或終端機，原則相同： 確保所有套件、參考與來源在最終編譯前均已準備完善。 ","date":"2025-10-17","objectID":"/zh-cn/kompilasi-dokumen-di-latex/:9:0","series":null,"tags":["作業系統","Linux"],"title":"技術指南：完整且高效地編譯 LaTeX 文件的方法","uri":"/zh-cn/kompilasi-dokumen-di-latex/#8-結論"},{"categories":["Linux"],"content":" 18.1 參考資料 The LaTeX Project — https://www.latex-project.org Overleaf 文件：Understanding PDF Compilation — https://www.overleaf.com/learn/latex TeX Users Group (TUG)：LaTeX Compilation Workflow — https://tug.org Wikibooks：LaTeX/Installing and Compiling — https://en.wikibooks.org/wiki/LaTeX/Installing_and_Compiling ","date":"2025-10-17","objectID":"/zh-cn/kompilasi-dokumen-di-latex/:9:1","series":null,"tags":["作業系統","Linux"],"title":"技術指南：完整且高效地編譯 LaTeX 文件的方法","uri":"/zh-cn/kompilasi-dokumen-di-latex/#參考資料"},{"categories":["LaTeX"],"content":"本文讨论了 LaTeX 中宏包的概念、类型和功能","date":"2025-10-17","objectID":"/zh-cn/mengenal-paket-latex/","series":null,"tags":["LaTeX"],"title":"认识 LaTeX 中的宏包","uri":"/zh-cn/mengenal-paket-latex/"},{"categories":["LaTeX"],"content":"本文讨论了 LaTeX 中宏包的概念、类型和功能。 ","date":"2025-10-17","objectID":"/zh-cn/mengenal-paket-latex/:0:0","series":null,"tags":["LaTeX"],"title":"认识 LaTeX 中的宏包","uri":"/zh-cn/mengenal-paket-latex/#"},{"categories":["LaTeX"],"content":" 掌握 LaTeX 宏包：为专业科学写作奠定坚实基础 LaTeX 是一个排版系统，已成为学术界和科学研究领域的事实标准。LaTeX 的主要优势之一是通过使用宏包 来扩展其核心系统功能。本文全面讨论了 LaTeX 中宏包的概念、功能和管理，并提供了用于学术文档（如学期论文和学位论文）的实际应用示例。此外，本文还重点介绍了宏包冲突等常见问题，并提供了实用的解决方案。 ","date":"2025-10-17","objectID":"/zh-cn/mengenal-paket-latex/:0:0","series":null,"tags":["LaTeX"],"title":"认识 LaTeX 中的宏包","uri":"/zh-cn/mengenal-paket-latex/#掌握-latex-宏包为专业科学写作奠定坚实基础"},{"categories":["LaTeX"],"content":" 1 引言在科学写作领域，LaTeX 以其能够生成精确、一致且美观的文档而闻名。然而，LaTeX 的真正力量不仅在于其核心引擎，还在于数千个附加宏包，它们提供了高级功能。根据韦恩州立大学图书馆 (2024) 的说法，LaTeX 宏包是扩展组件，使用户能够轻松管理数学公式、图形、参考文献和页面布局等元素。没有这些宏包，用户必须为每个所需功能从头开始编写代码——这既低效又容易出错。 ","date":"2025-10-17","objectID":"/zh-cn/mengenal-paket-latex/:1:0","series":null,"tags":["LaTeX"],"title":"认识 LaTeX 中的宏包","uri":"/zh-cn/mengenal-paket-latex/#引言"},{"categories":["LaTeX"],"content":" 2 LaTeX 宏包基本概念","date":"2025-10-17","objectID":"/zh-cn/mengenal-paket-latex/:2:0","series":null,"tags":["LaTeX"],"title":"认识 LaTeX 中的宏包","uri":"/zh-cn/mengenal-paket-latex/#latex-宏包基本概念"},{"categories":["LaTeX"],"content":" 2.1 什么是宏包？宏包是宏和附加命令的集合，用于扩展 LaTeX 的基本功能。宏包文件通常具有 .sty 扩展名，并通过以下命令激活： latex \\usepackage[选项]{宏包名称} 此命令写在 导言区，即 \\begin{document} 之前的区域。示例： latex \\documentclass{article} \\usepackage{amsmath} \\usepackage{graphicx} \\usepackage[margin=1in]{geometry} \\begin{document} ... \\end{document} 每个宏包都有各自的文档，可以在 CTAN 上找到，这是全球 LaTeX 宏包的主要来源。 https://ctan.png 常用宏包的类型和功能 宏包名称 主要功能 使用示例 amsmath, amssymb 提供高级数学符号和环境 编写复杂方程、矩阵、积分 graphicx 插入外部图像 \\includegraphics[width=0.5\\textwidth]{figure.png} geometry 设置页边距和页面尺寸 \\usepackage[margin=1in]{geometry} hyperref 添加超链接和 PDF 元数据 \\usepackage[colorlinks=true]{hyperref} biblatex / natbib 管理引用和自动参考文献 \\usepackage[backend=biber,style=apa]{biblatex} tikz, pgfplots 直接在 LaTeX 中创建矢量图形和图表 科学图表、流程图、数据图 cleveref 简化交叉引用 使用 \\cref{label} 进行自动引用 xcolor 设置文本和页面元素的颜色 文本高亮或彩色表格 案例研究 1：用于学期论文或学位论文的导言区 导言区是学术文档中最关键的部分，因为它决定了页面格式、字体类型和引用风格。以下是大学学术作品中常用的导言区示例： latex \\documentclass[12pt,a4paper]{report} % 语言和编码 \\usepackage[utf8]{inputenc} \\usepackage[T1]{fontenc} \\usepackage[indonesian]{babel} % 页面布局 \\usepackage[margin=3cm]{geometry} % 数学和科学宏包 \\usepackage{amsmath, amssymb, amsthm} \\usepackage{siunitx} % 图形和表格 \\usepackage{graphicx} \\usepackage{booktabs} \\usepackage{caption} \\usepackage{subcaption} % 引用和参考文献 \\usepackage[backend=biber,style=apa]{biblatex} \\addbibresource{references.bib} % 超链接和 PDF 元数据 \\usepackage[hidelinks]{hyperref} \\hypersetup{ pdfauthor={作者姓名}, pdftitle={论文或学位论文标题}, pdfsubject={学术文档}, pdfkeywords={LaTeX, 论文, 宏包, 学术} } \\begin{document} ... \\end{document} 💡 提示： 采用模块化方法，将导言区部分存储在单独的文件中，以便于维护并在不同项目中重复使用。 案例研究 2：解决 hyperref 和 geometry 宏包冲突 LaTeX 文档中最常见的问题之一是宏包冲突，尤其是 hyperref 和 geometry 之间。这两个宏包经常处理页面布局元素和 PDF 元数据，可能导致如下错误信息： text Option clash for package geometry 解决方案： 在 hyperref 之前调用 geometry，因为 hyperref 会读取已有的布局设置。 使用如下配置： latex \\usepackage[margin=1in]{geometry} \\usepackage[colorlinks=true, linkcolor=blue]{hyperref} 避免在 hyperref 之后再次调用 geometry。如果需要在文档中间更改页边距，请使用命令： latex \\newgeometry{margin=2cm} 通过这种方式，可以避免选项冲突，并且超链接在正常运行的同时不会改变页面格式。 推荐最佳实践 仅使用必要的宏包以保持文档稳定性。 定期更新 LaTeX 发行版 以获取最新的宏包版本。 在使用前阅读 CTAN 上每个宏包的官方文档。 注意调用顺序，特别是对于更改页面外观或引用的宏包。 在导言区使用注释解释每个宏包的功能，以便日后理解。 良好注释的示例： latex % 用于高级数学格式的宏包 \\usepackage{amsmath, amssymb} 结论 LaTeX 宏包是 LaTeX 系统灵活性的支柱。通过理解宏包的工作原理、调用结构以及宏包之间的潜在冲突，用户可以创建整洁、专业且高效的学术文档。无论是用于学期论文、学位论文还是科学出版物，掌握宏包都是迈向数字化学术环境中最佳生产力的重要一步。 参考文献 Wayne State University Libraries. How to Use LaTeX: Packages. https://guides.lib.wayne.edu/latex/packages The LaTeX Project. CTAN: Comprehensive TeX Archive Network. https://ctan.org Overleaf Documentation. LaTeX Packages and Configuration. https://www.overleaf.com/learn StackExchange LaTeX Community. Common Package Conflicts and Solutions. https://tex.stackexchange.com ","date":"2025-10-17","objectID":"/zh-cn/mengenal-paket-latex/:2:1","series":null,"tags":["LaTeX"],"title":"认识 LaTeX 中的宏包","uri":"/zh-cn/mengenal-paket-latex/#什么是宏包"},{"categories":["Linux"],"content":"本文讨论了一种流行的 Linux 发行版——Debian。","date":"2025-10-16","objectID":"/zh-cn/distro-linux-debian/","series":null,"tags":["操作系统","Linux"],"title":"Debian：通用操作系统","uri":"/zh-cn/distro-linux-debian/"},{"categories":["Linux"],"content":"Debian 是最古老、最受尊敬的 Linux 发行版之一，以其稳定性、安全性以及对自由软件原则的坚持而闻名。 本文将深入探讨 Debian 的历史、特点、变体、在软件开发中的应用，以及其优缺点，并以易于理解的方式呈现。 注意 注意：本文在 AI 技术的辅助下生成，并经过人工审阅以确保信息的准确性和清晰度。 ","date":"2025-10-16","objectID":"/zh-cn/distro-linux-debian/:0:0","series":null,"tags":["操作系统","Linux"],"title":"Debian：通用操作系统","uri":"/zh-cn/distro-linux-debian/#"},{"categories":["Linux"],"content":" 10 1. Debian 简史 Debian 于 1993 年 8 月由 Ian Murdock 创立，旨在提供一个通用、自由且高质量的 Linux 操作系统。 从一开始，Debian 就以自由软件和全球协作为核心精神。 Debian 的版本名称取自电影 Toy Story 中的角色（如 “Jessie”、 “Bullseye”、 “Bookworm”等）。 Debian 是许多流行发行版的基础，例如 Ubuntu、Linux Mint 等。 对 Debian 3.0 的分析显示，该项目规模庞大，源代码超过 1.05 亿行。 来源: arxiv.org ","date":"2025-10-16","objectID":"/zh-cn/distro-linux-debian/:1:0","series":null,"tags":["操作系统","Linux"],"title":"Debian：通用操作系统","uri":"/zh-cn/distro-linux-debian/#1-debian-简史"},{"categories":["Linux"],"content":" 11 2. 哲学与社区debian.org 首页 ","date":"2025-10-16","objectID":"/zh-cn/distro-linux-debian/:2:0","series":null,"tags":["操作系统","Linux"],"title":"Debian：通用操作系统","uri":"/zh-cn/distro-linux-debian/#2-哲学与社区"},{"categories":["Linux"],"content":" 11.1 Debian 哲学Debian 的原则包括： 自由软件 — 只使用并支持自由软件。 质量与稳定性 — 每个软件包在进入稳定版之前都经过严格测试。 透明与协作 — 所有决策通过社区共识完成。 以用户为中心 — 技术决策始终以用户和开发者的利益为导向。 ","date":"2025-10-16","objectID":"/zh-cn/distro-linux-debian/:2:1","series":null,"tags":["操作系统","Linux"],"title":"Debian：通用操作系统","uri":"/zh-cn/distro-linux-debian/#debian-哲学"},{"categories":["Linux"],"content":" 11.2 Debian 社区 完全由全球志愿者管理。 设有维护、 安全、 文档等专业团队。 重大决策通过社区 投票 完成。 Debian 社区以其全面详尽的文档而著称。 ","date":"2025-10-16","objectID":"/zh-cn/distro-linux-debian/:2:2","series":null,"tags":["操作系统","Linux"],"title":"Debian：通用操作系统","uri":"/zh-cn/distro-linux-debian/#debian-社区"},{"categories":["Linux"],"content":" 12 3. Debian 发布与版本模型Debian 有三个主要分支： 分支 特点 主要用途 Stable（稳定版） 官方发布，极为稳定 生产系统与服务器 Testing（测试版） 包较新，处于测试阶段 希望平衡稳定与更新的用户 Unstable（Sid） 最新、实验性软件包 开发者与测试者 稳定版大约每 2–3 年发布一次。 新包先进入 unstable，再到 testing，最后进入 stable。 用户可使用 backports 获取较新软件包而无需更换版本。 ","date":"2025-10-16","objectID":"/zh-cn/distro-linux-debian/:3:0","series":null,"tags":["操作系统","Linux"],"title":"Debian：通用操作系统","uri":"/zh-cn/distro-linux-debian/#3-debian-发布与版本模型"},{"categories":["Linux"],"content":" 13 4. 架构与软件包管理","date":"2025-10-16","objectID":"/zh-cn/distro-linux-debian/:4:0","series":null,"tags":["操作系统","Linux"],"title":"Debian：通用操作系统","uri":"/zh-cn/distro-linux-debian/#4-架构与软件包管理"},{"categories":["Linux"],"content":" 13.1 支持的架构Debian 支持多种硬件架构，如 amd64、i386、ARM（多种变体）。 ","date":"2025-10-16","objectID":"/zh-cn/distro-linux-debian/:4:1","series":null,"tags":["操作系统","Linux"],"title":"Debian：通用操作系统","uri":"/zh-cn/distro-linux-debian/#支持的架构"},{"categories":["Linux"],"content":" 13.2 软件包系统与管理Debian 使用 .deb 格式的软件包，并通过 APT（Advanced Package Tool） 管理。 常用命令： bash sudo apt update sudo apt upgrade sudo apt install \u003c软件包名称\u003e sudo apt remove \u003c软件包名称\u003e 仓库分为三部分： main — 完全自由软件。 contrib — 自由软件但依赖非自由组件。 non-free — 含有非自由许可的软件。 ","date":"2025-10-16","objectID":"/zh-cn/distro-linux-debian/:4:2","series":null,"tags":["操作系统","Linux"],"title":"Debian：通用操作系统","uri":"/zh-cn/distro-linux-debian/#软件包系统与管理"},{"categories":["Linux"],"content":" 14 5. Debian 变体与衍生版由于其开放性，许多发行版基于 Debian 构建： Ubuntu — 最流行的衍生版，拥有友好的图形界面。 Linux Mint Debian Edition (LMDE) — 直接基于 Debian 的 Mint 版本。 SolydXK — 基于 Debian Stable，使用 KDE 与 Xfce 桌面。 Elive — 使用 Enlightenment 桌面，外观优雅。 AVLinux — 专注于音频与多媒体制作。 这些衍生版通常添加了额外配置、特制内核或软件包以满足用户需求。 ","date":"2025-10-16","objectID":"/zh-cn/distro-linux-debian/:5:0","series":null,"tags":["操作系统","Linux"],"title":"Debian：通用操作系统","uri":"/zh-cn/distro-linux-debian/#5-debian-变体与衍生版"},{"categories":["Linux"],"content":" 15 6. Debian 与开发者Debian 因稳定性和丰富的软件包而被众多开发者采用。 ","date":"2025-10-16","objectID":"/zh-cn/distro-linux-debian/:6:0","series":null,"tags":["操作系统","Linux"],"title":"Debian：通用操作系统","uri":"/zh-cn/distro-linux-debian/#6-debian-与开发者"},{"categories":["Linux"],"content":" 15.1 开发工具与环境 build-essential 包：gcc、g++、make 及基本库。 流行语言（Python, Node.js, Java, Go）均可直接从仓库安装。 Git 等版本控制系统安装便捷。 编辑器如 VS Code 和 Sublime Text 可通过 .deb 安装包或外部仓库获取。 参考: dev.to/seanpetiya ","date":"2025-10-16","objectID":"/zh-cn/distro-linux-debian/:6:1","series":null,"tags":["操作系统","Linux"],"title":"Debian：通用操作系统","uri":"/zh-cn/distro-linux-debian/#开发工具与环境"},{"categories":["Linux"],"content":" 15.2 对开发者的优势 稳定、安全 — 适合长期开发环境。 高可复现性 — 系统配置一致性强。 庞大社区 — 文档全面、支持活跃。 高度可定制 — 可自行选择软件包版本或编译构建。 ","date":"2025-10-16","objectID":"/zh-cn/distro-linux-debian/:6:2","series":null,"tags":["操作系统","Linux"],"title":"Debian：通用操作系统","uri":"/zh-cn/distro-linux-debian/#对开发者的优势"},{"categories":["Linux"],"content":" 15.3 挑战 稳定版软件包版本偏旧。 某些闭源驱动需额外配置。 对新手而言命令行学习曲线较陡。 “Debian 很棒，但稳定版的软件版本较旧。” — r/linuxquestions ","date":"2025-10-16","objectID":"/zh-cn/distro-linux-debian/:6:3","series":null,"tags":["操作系统","Linux"],"title":"Debian：通用操作系统","uri":"/zh-cn/distro-linux-debian/#挑战"},{"categories":["Linux"],"content":" 16 7. 优缺点","date":"2025-10-16","objectID":"/zh-cn/distro-linux-debian/:7:0","series":null,"tags":["操作系统","Linux"],"title":"Debian：通用操作系统","uri":"/zh-cn/distro-linux-debian/#7-优缺点"},{"categories":["Linux"],"content":" 16.1 优点 极其稳定和安全。 完全免费与开源。 社区庞大、文档详尽。 支持多种架构。 软件生态丰富。 适用于服务器与桌面。 ","date":"2025-10-16","objectID":"/zh-cn/distro-linux-debian/:7:1","series":null,"tags":["操作系统","Linux"],"title":"Debian：通用操作系统","uri":"/zh-cn/distro-linux-debian/#优点"},{"categories":["Linux"],"content":" 16.2 缺点 稳定版软件包版本落后。 非自由驱动安装不够简便。 新手学习曲线较高。 大版本升级需谨慎操作。 ","date":"2025-10-16","objectID":"/zh-cn/distro-linux-debian/:7:2","series":null,"tags":["操作系统","Linux"],"title":"Debian：通用操作系统","uri":"/zh-cn/distro-linux-debian/#缺点"},{"categories":["Linux"],"content":" 17 8. 入门建议 新手或服务器推荐使用 稳定版（Stable）。 根据需要启用 contrib 与 non-free 仓库。 修改前备份 sources.list 文件。 使用 apt-mark hold \u003c软件包\u003e 锁定版本。 学习如何自行构建 .deb 包。 参与 Debian 论坛或邮件列表。 ","date":"2025-10-16","objectID":"/zh-cn/distro-linux-debian/:8:0","series":null,"tags":["操作系统","Linux"],"title":"Debian：通用操作系统","uri":"/zh-cn/distro-linux-debian/#8-入门建议"},{"categories":["Linux"],"content":" 18 9. 总结Debian 是 Linux 世界的重要基石。 其稳定性、安全性及社区精神，使其成为众多发行版的核心基础。 对新手而言，Debian 可能略显复杂；但对开发者与系统管理员来说，Debian 是可靠、安全且灵活的选择，适用于桌面、服务器及软件开发环境。 更多参考： Debian 官方网站 维基百科：Debian Debian Developer’s Corner ","date":"2025-10-16","objectID":"/zh-cn/distro-linux-debian/:9:0","series":null,"tags":["操作系统","Linux"],"title":"Debian：通用操作系统","uri":"/zh-cn/distro-linux-debian/#9-总结"},{"categories":["LaTeX"],"content":"本文讨论在使用LaTeX编写文档时常用的文本格式化方法。","date":"2025-10-16","objectID":"/zh-cn/format-teks-di-latex/","series":null,"tags":["LaTeX"],"title":"LaTeX中的文本格式化","uri":"/zh-cn/format-teks-di-latex/"},{"categories":["LaTeX"],"content":"本文讨论在使用LaTeX编写文档时常用的文本格式化方法。 ","date":"2025-10-16","objectID":"/zh-cn/format-teks-di-latex/:0:0","series":null,"tags":["LaTeX"],"title":"LaTeX中的文本格式化","uri":"/zh-cn/format-teks-di-latex/#"},{"categories":["LaTeX"],"content":" LaTeX文本格式化指南LaTeX是一种功能强大的排版系统，广泛应用于科学与技术写作。它的优势之一是可以灵活、精确地控制文本格式。本文将介绍LaTeX中常用的基础与高级文本格式化技巧，包括字体样式、字体大小、文本对齐以及文档中常用的其他元素。 ","date":"2025-10-16","objectID":"/zh-cn/format-teks-di-latex/:0:0","series":null,"tags":["LaTeX"],"title":"LaTeX中的文本格式化","uri":"/zh-cn/format-teks-di-latex/#latex文本格式化指南"},{"categories":["LaTeX"],"content":" 1 字体样式LaTeX提供了多种更改字体样式的命令： \\textbf{...}：将文本加粗。 \\textit{...}：将文本倾斜。 \\underline{...}：为文本添加下划线。 \\emph{...}：强调文本，通常表现为倾斜。 \\textsc{...}：将文本转换为小型大写字母。 \\textrm{...}：使用衬线（roman）字体。 \\textsf{...}：使用无衬线（sans-serif）字体。 \\texttt{...}：使用等宽字体（typewriter）。 \\textnormal{...}：恢复为默认字体样式。 示例： latex \\textbf{加粗文本}, \\textit{倾斜文本}, \\underline{带下划线文本}, \\emph{强调文本}, \\textsc{小型大写文本}. ","date":"2025-10-16","objectID":"/zh-cn/format-teks-di-latex/:1:0","series":null,"tags":["LaTeX"],"title":"LaTeX中的文本格式化","uri":"/zh-cn/format-teks-di-latex/#字体样式"},{"categories":["LaTeX"],"content":" 2 字体大小LaTeX提供了多种字体大小命令： \\tiny{...}：极小字体。 \\scriptsize{...}：脚本字体。 \\footnotesize{...}：脚注字体。 \\small{...}：小字体。 \\normalsize{...}：标准字体（默认）。 \\large{...}：较大字体。 \\Large{...}：更大字体。 \\huge{...}：非常大字体。 \\Huge{...}：最大字体。 示例： latex \\huge{这段文字非常大} ","date":"2025-10-16","objectID":"/zh-cn/format-teks-di-latex/:2:0","series":null,"tags":["LaTeX"],"title":"LaTeX中的文本格式化","uri":"/zh-cn/format-teks-di-latex/#字体大小"},{"categories":["LaTeX"],"content":" 3 文本对齐LaTeX允许使用以下命令进行文本对齐： \\centering：居中对齐。 \\raggedright：左对齐。 \\raggedleft：右对齐。 示例： latex \\begin{center} \\textbf{\\Large 这段文字居中显示} \\end{center} ","date":"2025-10-16","objectID":"/zh-cn/format-teks-di-latex/:3:0","series":null,"tags":["LaTeX"],"title":"LaTeX中的文本格式化","uri":"/zh-cn/format-teks-di-latex/#文本对齐"},{"categories":["LaTeX"],"content":" 4 列表与项目符号LaTeX支持多种列表格式： 无序列表（项目符号列表）： latex \\begin{itemize} \\item 第一项 \\item 第二项 \\item 第三项 \\end{itemize} 有序列表（编号列表）： latex \\begin{enumerate} \\item 第一项 \\item 第二项 \\item 第三项 \\end{enumerate} ","date":"2025-10-16","objectID":"/zh-cn/format-teks-di-latex/:4:0","series":null,"tags":["LaTeX"],"title":"LaTeX中的文本格式化","uri":"/zh-cn/format-teks-di-latex/#列表与项目符号"},{"categories":["LaTeX"],"content":" 5 颜色与背景要为文本或背景添加颜色，需要加载xcolor宏包： latex \\usepackage{xcolor} 示例： latex \\textcolor{red}{这段文字是红色的} 为文本添加背景色： latex \\colorbox{yellow}{带黄色背景的文字} ","date":"2025-10-16","objectID":"/zh-cn/format-teks-di-latex/:5:0","series":null,"tags":["LaTeX"],"title":"LaTeX中的文本格式化","uri":"/zh-cn/format-teks-di-latex/#颜色与背景"},{"categories":["LaTeX"],"content":" 6 表格与图片LaTeX能够轻松创建表格与插入图片： 表格： latex \\begin{tabular}{|c|c|c|} \\hline 列1 \u0026 列2 \u0026 列3 \\\\ \\hline 数据1 \u0026 数据2 \u0026 数据3 \\\\ \\hline \\end{tabular} 图片： latex \\begin{figure}[h] \\centering \\includegraphics[width=0.5\\textwidth]{image.jpg} \\caption{图片说明} \\end{figure} ","date":"2025-10-16","objectID":"/zh-cn/format-teks-di-latex/:6:0","series":null,"tags":["LaTeX"],"title":"LaTeX中的文本格式化","uri":"/zh-cn/format-teks-di-latex/#表格与图片"},{"categories":["LaTeX"],"content":" 7 宏命令使用LaTeX允许定义新命令（宏）以便简化写作： latex \\newcommand{\\myname}{张伟} 然后可以在文档中通过\\myname插入“张伟”。 ","date":"2025-10-16","objectID":"/zh-cn/format-teks-di-latex/:7:0","series":null,"tags":["LaTeX"],"title":"LaTeX中的文本格式化","uri":"/zh-cn/format-teks-di-latex/#宏命令使用"},{"categories":["LaTeX"],"content":" 8 特殊字符LaTeX中某些字符具有特殊功能： # $ % ^ \u0026 _ { } ~ \\ 若要将它们作为普通文本使用，需要使用转义命令： \\# 表示 # \\% 表示 % \\\u0026 表示 \u0026 \\_ 表示 _ \\{ 和 \\} 表示 { 与 } \\~{} 表示 ~ \\textbackslash 表示 \\ ","date":"2025-10-16","objectID":"/zh-cn/format-teks-di-latex/:8:0","series":null,"tags":["LaTeX"],"title":"LaTeX中的文本格式化","uri":"/zh-cn/format-teks-di-latex/#特殊字符"},{"categories":["LaTeX"],"content":" 9 结论LaTeX是一款非常强大的文本排版工具，特别适合科学与技术文档。通过掌握本文介绍的各种基础与进阶命令，您可以创建既专业又美观的文档。继续探索与实践LaTeX，充分发挥它在文档编排中的强大潜力。 ","date":"2025-10-16","objectID":"/zh-cn/format-teks-di-latex/:9:0","series":null,"tags":["LaTeX"],"title":"LaTeX中的文本格式化","uri":"/zh-cn/format-teks-di-latex/#结论"},{"categories":["LaTeX"],"content":"本文讨论信件、文章、报告和书籍文档类的LaTeX文档结构","date":"2025-10-14","objectID":"/zh-cn/struktur-dokumen-latex/","series":null,"tags":["LaTeX"],"title":"LaTeX文档结构","uri":"/zh-cn/struktur-dokumen-latex/"},{"categories":["LaTeX"],"content":"本文讨论信件、文章、报告和书籍文档类的LaTeX文档结构。 ","date":"2025-10-14","objectID":"/zh-cn/struktur-dokumen-latex/:0:0","series":null,"tags":["LaTeX"],"title":"LaTeX文档结构","uri":"/zh-cn/struktur-dokumen-latex/#"},{"categories":["LaTeX"],"content":" 9 1. 引言LaTeX 是一种基于标记的排版系统,广泛用于撰写学术论文、报告、书籍甚至毕业论文。Overleaf 是编写和编译LaTeX文档的流行平台,这是一个在线编辑器,支持实时协作并提供完整的文档和模板。 在开始撰写文档之前,了解LaTeX文档的基本结构非常重要。一个 .tex 文件通常由三个主要部分组成: 导言区(Preamble) – \\begin{document} 之前的初始设置 正文(Body) – \\begin{document} 和 \\end{document} 之间的主要内容 附加部分 – 如附录、参考文献或索引 ","date":"2025-10-14","objectID":"/zh-cn/struktur-dokumen-latex/:1:0","series":null,"tags":["LaTeX"],"title":"LaTeX文档结构","uri":"/zh-cn/struktur-dokumen-latex/#1-引言"},{"categories":["LaTeX"],"content":" 10 2. LaTeX文档的通用结构LaTeX文档的最小结构如下: latex \\documentclass{article} \\usepackage[utf8]{inputenc} \\title{文档标题} \\author{作者姓名} \\date{\\today} \\begin{document} \\maketitle \\section{引言} 您的引言文本在此处。 \\end{document} Overleaf 解释说,每个LaTeX文档必须以 \\documentclass{} 声明开始,并以 \\end{document} 结束。 ","date":"2025-10-14","objectID":"/zh-cn/struktur-dokumen-latex/:2:0","series":null,"tags":["LaTeX"],"title":"LaTeX文档结构","uri":"/zh-cn/struktur-dokumen-latex/#2-latex文档的通用结构"},{"categories":["LaTeX"],"content":" 11 3. 导言区导言区包含文档开始之前的所有初始设置。通常包括: ","date":"2025-10-14","objectID":"/zh-cn/struktur-dokumen-latex/:3:0","series":null,"tags":["LaTeX"],"title":"LaTeX文档结构","uri":"/zh-cn/struktur-dokumen-latex/#3-导言区"},{"categories":["LaTeX"],"content":" 11.1 a. 文档类 latex \\documentclass[12pt, a4paper]{article} 文档类决定文档的类型和通用样式。一些标准类别: 类别 描述 article 用于文章、短报告或论文 report 用于长报告、毕业论文或学位论文 book 用于带章节(chapter)的书籍 letter 用于正式信件 ","date":"2025-10-14","objectID":"/zh-cn/struktur-dokumen-latex/:3:1","series":null,"tags":["LaTeX"],"title":"LaTeX文档结构","uri":"/zh-cn/struktur-dokumen-latex/#a-文档类"},{"categories":["LaTeX"],"content":" 11.2 b. 宏包(Packages)宏包扩展了LaTeX的功能。常见示例: latex \\usepackage[utf8]{inputenc} % 设置文本编码 \\usepackage[T1]{fontenc} % 设置字体编码 \\usepackage{graphicx} % 插入图片 \\usepackage{amsmath, amssymb} % 数学符号和公式 ","date":"2025-10-14","objectID":"/zh-cn/struktur-dokumen-latex/:3:2","series":null,"tags":["LaTeX"],"title":"LaTeX文档结构","uri":"/zh-cn/struktur-dokumen-latex/#b-宏包packages"},{"categories":["LaTeX"],"content":" 11.3 c. 文档元数据元数据包含标题、作者和日期等信息。 latex \\title{LaTeX文档示例} \\author{作者姓名} \\date{\\today} % 或可以用 {} 留空 当在文档正文中调用 \\maketitle 命令时,将使用此元数据。 ","date":"2025-10-14","objectID":"/zh-cn/struktur-dokumen-latex/:3:3","series":null,"tags":["LaTeX"],"title":"LaTeX文档结构","uri":"/zh-cn/struktur-dokumen-latex/#c-文档元数据"},{"categories":["LaTeX"],"content":" 12 4. 文档正文此部分包含 \\begin{document} 和 \\end{document} 之间的主要内容。 基本结构示例: latex \\begin{document} \\maketitle \\section{引言} 主题的开篇或介绍部分。 \\section{方法论} 解释研究的方法或步骤。 \\subsection{步骤} 方法的更详细说明。 \\section{结论} 讨论的最终结论。 \\end{document} ","date":"2025-10-14","objectID":"/zh-cn/struktur-dokumen-latex/:4:0","series":null,"tags":["LaTeX"],"title":"LaTeX文档结构","uri":"/zh-cn/struktur-dokumen-latex/#4-文档正文"},{"categories":["LaTeX"],"content":" 12.1 a. 章节编号LaTeX自动为章节(\\section、\\subsection 等)编号。要创建无编号的章节,使用星号: latex \\section*{致谢} ","date":"2025-10-14","objectID":"/zh-cn/struktur-dokumen-latex/:4:1","series":null,"tags":["LaTeX"],"title":"LaTeX文档结构","uri":"/zh-cn/struktur-dokumen-latex/#a-章节编号"},{"categories":["LaTeX"],"content":" 12.2 b. 添加图片使用 graphicx 宏包: latex \\usepackage{graphicx} \\begin{figure}[h] \\centering \\includegraphics[width=0.5\\textwidth]{gambar.png} \\caption{图片示例} \\label{fig:contoh} \\end{figure} ","date":"2025-10-14","objectID":"/zh-cn/struktur-dokumen-latex/:4:2","series":null,"tags":["LaTeX"],"title":"LaTeX文档结构","uri":"/zh-cn/struktur-dokumen-latex/#b-添加图片"},{"categories":["LaTeX"],"content":" 12.3 c. 编写公式和方程使用 amsmath 宏包: latex \\begin{equation} E = mc^2 \\end{equation} ","date":"2025-10-14","objectID":"/zh-cn/struktur-dokumen-latex/:4:3","series":null,"tags":["LaTeX"],"title":"LaTeX文档结构","uri":"/zh-cn/struktur-dokumen-latex/#c-编写公式和方程"},{"categories":["LaTeX"],"content":" 13 5. 附加部分(可选)对于学术文档或书籍,LaTeX提供额外的分区,如: ","date":"2025-10-14","objectID":"/zh-cn/struktur-dokumen-latex/:5:0","series":null,"tags":["LaTeX"],"title":"LaTeX文档结构","uri":"/zh-cn/struktur-dokumen-latex/#5-附加部分可选"},{"categories":["LaTeX"],"content":" 13.1 a. 前置内容、主体内容和后置内容 latex \\frontmatter % 前置部分(摘要、目录) \\tableofcontents \\mainmatter % 主要内容(章节、小节) \\chapter{引言} \\backmatter % 后置部分(参考文献、附录) \\appendix \\chapter{附录} ","date":"2025-10-14","objectID":"/zh-cn/struktur-dokumen-latex/:5:1","series":null,"tags":["LaTeX"],"title":"LaTeX文档结构","uri":"/zh-cn/struktur-dokumen-latex/#a-前置内容主体内容和后置内容"},{"categories":["LaTeX"],"content":" 13.2 b. 参考文献使用 biblatex 实现自动参考文献列表: latex \\usepackage{biblatex} \\addbibresource{daftar-pustaka.bib} ... \\printbibliography ","date":"2025-10-14","objectID":"/zh-cn/struktur-dokumen-latex/:5:2","series":null,"tags":["LaTeX"],"title":"LaTeX文档结构","uri":"/zh-cn/struktur-dokumen-latex/#b-参考文献"},{"categories":["LaTeX"],"content":" 14 6. 最小文档示例以下是最简单的有效文档示例: latex \\documentclass{article} \\usepackage[utf8]{inputenc} \\title{LaTeX中的Hello World} \\author{作者} \\date{} \\begin{document} \\maketitle \\section{引言} 这是LaTeX中的最小文档示例。 \\end{document} ","date":"2025-10-14","objectID":"/zh-cn/struktur-dokumen-latex/:6:0","series":null,"tags":["LaTeX"],"title":"LaTeX文档结构","uri":"/zh-cn/struktur-dokumen-latex/#6-最小文档示例"},{"categories":["LaTeX"],"content":" 15 7. 技巧和最佳实践 使用分离的文件夹结构(/images、/chapters、/bib)以便轻松管理大型文档。 将每个章节分离到单独的 .tex 文件中,并使用 \\input{} 或 \\include{} 调用。 使用 Overleaf大纲面板 快速查看文档结构。 避免加载不必要的过多宏包,以保持编译性能。 ","date":"2025-10-14","objectID":"/zh-cn/struktur-dokumen-latex/:7:0","series":null,"tags":["LaTeX"],"title":"LaTeX文档结构","uri":"/zh-cn/struktur-dokumen-latex/#7-技巧和最佳实践"},{"categories":["LaTeX"],"content":" 16 8. 结论LaTeX文档的基本结构非常有序和模块化。通过理解导言区、正文和附加部分之间的划分,作者可以更高效地管理技术文档。 Overleaf提供完整的指南、实用示例和模板,帮助新用户学习并撰写专业文档。 ","date":"2025-10-14","objectID":"/zh-cn/struktur-dokumen-latex/:8:0","series":null,"tags":["LaTeX"],"title":"LaTeX文档结构","uri":"/zh-cn/struktur-dokumen-latex/#8-结论"},{"categories":["LaTeX"],"content":" 16.1 📚 参考资料 30分钟学习LaTeX – Overleaf 章节和段落 – Overleaf 如何用LaTeX撰写论文(第1部分):基本结构 – Overleaf 插入图片 – Overleaf 使用BibLaTeX管理参考文献 – Overleaf 在Overleaf中使用文件大纲 ","date":"2025-10-14","objectID":"/zh-cn/struktur-dokumen-latex/:8:1","series":null,"tags":["LaTeX"],"title":"LaTeX文档结构","uri":"/zh-cn/struktur-dokumen-latex/#-参考资料"},{"categories":["LaTeX"],"content":"在不同操作系统平台上安装 MiKTeX、MacTeX 和 TeX Live 的详细指南","date":"2025-10-08","objectID":"/zh-cn/instal-miktex-mactex-texlive/","series":null,"tags":["MiKTeX","MacTeX","TeX Live"],"title":"在不同操作系统平台上安装 MiKTeX、MacTeX 和 TeX Live 的指南","uri":"/zh-cn/instal-miktex-mactex-texlive/"},{"categories":["LaTeX"],"content":"本文介绍如何在不同操作系统上安装各种 LaTeX 发行版，包括 MiKTeX、MacTeX 和 TeX Live。 注意 若要深入学习 LaTeX，请访问 LaTeX 学习指南 想要编写论文、科研报告或书籍，让排版达到国际学术出版水准吗？ 本指南将帮助您了解并在 Windows、macOS 和 Linux 上安装 LaTeX —— 从选择最佳发行版到解决常见问题。 无论您是初学者还是高级用户，都能通过此指南高效且专业地工作。 ","date":"2025-10-08","objectID":"/zh-cn/instal-miktex-mactex-texlive/:0:0","series":null,"tags":["MiKTeX","MacTeX","TeX Live"],"title":"在不同操作系统平台上安装 MiKTeX、MacTeX 和 TeX Live 的指南","uri":"/zh-cn/instal-miktex-mactex-texlive/#"},{"categories":["LaTeX"],"content":" 13 1. LaTeX 概述LaTeX 是一种用于生成专业排版文档的系统（typesetting system），在学术界、科学界和出版界被广泛使用。它能够轻松处理复杂结构，如： 数学公式与科学符号， 自动生成引用与参考文献， 保持文档布局一致且规范。 要运行 LaTeX，您需要一个 TeX 发行版，即包含所有必需组件的软件包，用于编写、编译和格式化文档。常见的三个发行版是 MiKTeX（Windows）、MacTeX（macOS）和 TeX Live（跨平台）。 ","date":"2025-10-08","objectID":"/zh-cn/instal-miktex-mactex-texlive/:1:0","series":null,"tags":["MiKTeX","MacTeX","TeX Live"],"title":"在不同操作系统平台上安装 MiKTeX、MacTeX 和 TeX Live 的指南","uri":"/zh-cn/instal-miktex-mactex-texlive/#1-latex-概述"},{"categories":["LaTeX"],"content":" 14 2. 什么是 LaTeX 发行版？LaTeX 发行版包含： TeX 引擎（如 pdfTeX、XeTeX、LuaTeX）； 包管理器，用于下载与更新宏包； 字体与文档样式集； 编译器，将 .tex 文件转换为 .pdf； 内置编辑器（可选）。 简而言之，发行版是使用 LaTeX 的基础。 ","date":"2025-10-08","objectID":"/zh-cn/instal-miktex-mactex-texlive/:2:0","series":null,"tags":["MiKTeX","MacTeX","TeX Live"],"title":"在不同操作系统平台上安装 MiKTeX、MacTeX 和 TeX Live 的指南","uri":"/zh-cn/instal-miktex-mactex-texlive/#2-什么是-latex-发行版"},{"categories":["LaTeX"],"content":" 15 3. 三大发行版对比 方面 MiKTeX MacTeX TeX Live 平台 主要为 Windows，也支持 macOS 和 Linux 仅限 macOS Windows、macOS、Linux 安装大小 约 200 MB（基础版） 约 4 GB 约 4 GB 安装类型 按需模块化安装 完整安装 完整或自定义 包管理器 MiKTeX Console (GUI) TeX Live Utility tlmgr (命令行) 更新频率 频繁 每年一次（含小更新） 每年一次 易用性 ★★★★★ ★★★★☆ ★★★☆☆ 自动安装包 是（默认） 否 可启用 自带编辑器 TeXworks TeXShop TeXworks 安装后大小 1–4 GB 约 7 GB 5–7 GB 许可证 开源 开源 开源 用户社区 庞大 专注于 macOS 极大 推荐用途 Windows 初学者 macOS 用户 高级用户与 Linux 用户 ","date":"2025-10-08","objectID":"/zh-cn/instal-miktex-mactex-texlive/:3:0","series":null,"tags":["MiKTeX","MacTeX","TeX Live"],"title":"在不同操作系统平台上安装 MiKTeX、MacTeX 和 TeX Live 的指南","uri":"/zh-cn/instal-miktex-mactex-texlive/#3-三大发行版对比"},{"categories":["LaTeX"],"content":" 16 4. 在 Windows 上安装 MiKTeX","date":"2025-10-08","objectID":"/zh-cn/instal-miktex-mactex-texlive/:4:0","series":null,"tags":["MiKTeX","MacTeX","TeX Live"],"title":"在不同操作系统平台上安装 MiKTeX、MacTeX 和 TeX Live 的指南","uri":"/zh-cn/instal-miktex-mactex-texlive/#4-在-windows-上安装-miktex"},{"categories":["LaTeX"],"content":" 16.1 步骤 1：下载安装程序 打开 https://miktex.org/download 选择 Windows 版本 下载 MiKTeX 安装包（约 200 MB） ","date":"2025-10-08","objectID":"/zh-cn/instal-miktex-mactex-texlive/:4:1","series":null,"tags":["MiKTeX","MacTeX","TeX Live"],"title":"在不同操作系统平台上安装 MiKTeX、MacTeX 和 TeX Live 的指南","uri":"/zh-cn/instal-miktex-mactex-texlive/#步骤-1下载安装程序"},{"categories":["LaTeX"],"content":" 16.2 步骤 2：安装过程 双击安装文件 选择 “Install just for me”（无需管理员权限） 按提示完成安装 ","date":"2025-10-08","objectID":"/zh-cn/instal-miktex-mactex-texlive/:4:2","series":null,"tags":["MiKTeX","MacTeX","TeX Live"],"title":"在不同操作系统平台上安装 MiKTeX、MacTeX 和 TeX Live 的指南","uri":"/zh-cn/instal-miktex-mactex-texlive/#步骤-2安装过程"},{"categories":["LaTeX"],"content":" 16.3 步骤 3：配置选项 自动安装缺失包 → 选择 Yes 纸张大小 → 设置为 A4 点击 Start 开始安装 ","date":"2025-10-08","objectID":"/zh-cn/instal-miktex-mactex-texlive/:4:3","series":null,"tags":["MiKTeX","MacTeX","TeX Live"],"title":"在不同操作系统平台上安装 MiKTeX、MacTeX 和 TeX Live 的指南","uri":"/zh-cn/instal-miktex-mactex-texlive/#步骤-3配置选项"},{"categories":["LaTeX"],"content":" 16.4 步骤 4：验证安装 bash pdflatex --version 若显示 MiKTeX 版本号，则安装成功。 ","date":"2025-10-08","objectID":"/zh-cn/instal-miktex-mactex-texlive/:4:4","series":null,"tags":["MiKTeX","MacTeX","TeX Live"],"title":"在不同操作系统平台上安装 MiKTeX、MacTeX 和 TeX Live 的指南","uri":"/zh-cn/instal-miktex-mactex-texlive/#步骤-4验证安装"},{"categories":["LaTeX"],"content":" 16.5 步骤 5：更新包 打开 MiKTeX Console 点击 Updates → Check for updates → Update now ","date":"2025-10-08","objectID":"/zh-cn/instal-miktex-mactex-texlive/:4:5","series":null,"tags":["MiKTeX","MacTeX","TeX Live"],"title":"在不同操作系统平台上安装 MiKTeX、MacTeX 和 TeX Live 的指南","uri":"/zh-cn/instal-miktex-mactex-texlive/#步骤-5更新包"},{"categories":["LaTeX"],"content":" 17 5. 在 macOS 上安装 MacTeX 打开 https://www.tug.org/mactex/ 下载 MacTeX.pkg（约 4 GB） 或下载 BasicTeX（约 100 MB） 安装步骤： 双击 MacTeX.pkg 按照提示操作并输入管理员密码 等待 10–20 分钟完成安装 验证： bash pdflatex --version 若输出 pdfTeX 版本信息，则安装成功。 更新包：使用 TeX Live Utility → Update All Packages。 编辑器 TeXShop 会自动安装，位置在： Applications/TeX/TeXShop.app。 ","date":"2025-10-08","objectID":"/zh-cn/instal-miktex-mactex-texlive/:5:0","series":null,"tags":["MiKTeX","MacTeX","TeX Live"],"title":"在不同操作系统平台上安装 MiKTeX、MacTeX 和 TeX Live 的指南","uri":"/zh-cn/instal-miktex-mactex-texlive/#5-在-macos-上安装-mactex"},{"categories":["LaTeX"],"content":" 18 6. 在 Linux 上安装 TeX Live","date":"2025-10-08","objectID":"/zh-cn/instal-miktex-mactex-texlive/:6:0","series":null,"tags":["MiKTeX","MacTeX","TeX Live"],"title":"在不同操作系统平台上安装 MiKTeX、MacTeX 和 TeX Live 的指南","uri":"/zh-cn/instal-miktex-mactex-texlive/#6-在-linux-上安装-tex-live"},{"categories":["LaTeX"],"content":" 18.1 方法一：使用包管理器（推荐）Ubuntu/Debian: bash sudo apt update sudo apt install texlive-full Fedora/RHEL: bash sudo dnf install texlive-scheme-full Arch Linux: bash sudo pacman -S texlive-most ","date":"2025-10-08","objectID":"/zh-cn/instal-miktex-mactex-texlive/:6:1","series":null,"tags":["MiKTeX","MacTeX","TeX Live"],"title":"在不同操作系统平台上安装 MiKTeX、MacTeX 和 TeX Live 的指南","uri":"/zh-cn/instal-miktex-mactex-texlive/#方法一使用包管理器推荐"},{"categories":["LaTeX"],"content":" 18.2 方法二：手动安装（高级用户） bash wget https://mirror.ctan.org/systems/texlive/tlnet/install-tl-unx.tar.gz tar -xzf install-tl-unx.tar.gz cd install-tl-*/ sudo perl install-tl 添加 PATH： bash export PATH=/usr/local/texlive/2024/bin/x86_64-linux:$PATH source ~/.bashrc ","date":"2025-10-08","objectID":"/zh-cn/instal-miktex-mactex-texlive/:6:2","series":null,"tags":["MiKTeX","MacTeX","TeX Live"],"title":"在不同操作系统平台上安装 MiKTeX、MacTeX 和 TeX Live 的指南","uri":"/zh-cn/instal-miktex-mactex-texlive/#方法二手动安装高级用户"},{"categories":["LaTeX"],"content":" 19 7. 推荐的 LaTeX 编辑器 编辑器 平台 主要特点 TeXstudio Windows, macOS, Linux 功能全面、自动补全、集成 PDF Overleaf 在线 无需安装，实时协作 VS Code + LaTeX Workshop 跨平台 现代化、灵活、支持 Git TeXworks 内置 轻量级、适合初学者 LyX Windows, macOS, Linux 类似 Word 的界面（所见即所得） ","date":"2025-10-08","objectID":"/zh-cn/instal-miktex-mactex-texlive/:7:0","series":null,"tags":["MiKTeX","MacTeX","TeX Live"],"title":"在不同操作系统平台上安装 MiKTeX、MacTeX 和 TeX Live 的指南","uri":"/zh-cn/instal-miktex-mactex-texlive/#7-推荐的-latex-编辑器"},{"categories":["LaTeX"],"content":" 20 8. 测试安装创建 test.tex 文件： latex \\documentclass{article} \\usepackage[utf8]{inputenc} \\title{LaTeX 测试文档} \\author{您的姓名} \\date{\\today} \\begin{document} \\maketitle \\section{简介} 这是我的第一篇 LaTeX 文档。 \\section{公式示例} 毕达哥拉斯定理：$a^2 + b^2 = c^2$ \\[ \\int_0^\\infty e^{-x^2} dx = \\frac{\\sqrt{\\pi}}{2} \\] \\end{document} 编译命令： bash pdflatex test.tex 若生成 test.pdf 文件，则安装成功。 ","date":"2025-10-08","objectID":"/zh-cn/instal-miktex-mactex-texlive/:8:0","series":null,"tags":["MiKTeX","MacTeX","TeX Live"],"title":"在不同操作系统平台上安装 MiKTeX、MacTeX 和 TeX Live 的指南","uri":"/zh-cn/instal-miktex-mactex-texlive/#8-测试安装"},{"categories":["LaTeX"],"content":" 21 9. 常见问题与解决方案 问题 解决方法 找不到包 启用自动安装功能（MiKTeX）或执行 tlmgr install \u003c包名\u003e pdflatex 命令无效 确认 PATH 配置正确并重启终端 字体错误 在 Linux 中运行 sudo fc-cache -fv 或重新安装 MiKTeX 编译失败 检查 .log 文件并确认所有依赖包已安装 ","date":"2025-10-08","objectID":"/zh-cn/instal-miktex-mactex-texlive/:9:0","series":null,"tags":["MiKTeX","MacTeX","TeX Live"],"title":"在不同操作系统平台上安装 MiKTeX、MacTeX 和 TeX Live 的指南","uri":"/zh-cn/instal-miktex-mactex-texlive/#9-常见问题与解决方案"},{"categories":["LaTeX"],"content":" 22 10. 建议与维护","date":"2025-10-08","objectID":"/zh-cn/instal-miktex-mactex-texlive/:10:0","series":null,"tags":["MiKTeX","MacTeX","TeX Live"],"title":"在不同操作系统平台上安装 MiKTeX、MacTeX 和 TeX Live 的指南","uri":"/zh-cn/instal-miktex-mactex-texlive/#10-建议与维护"},{"categories":["LaTeX"],"content":" 22.1 初学者推荐： Windows → MiKTeX + TeXstudio macOS → MacTeX + TeXShop Linux → TeX Live + TeXstudio ","date":"2025-10-08","objectID":"/zh-cn/instal-miktex-mactex-texlive/:10:1","series":null,"tags":["MiKTeX","MacTeX","TeX Live"],"title":"在不同操作系统平台上安装 MiKTeX、MacTeX 和 TeX Live 的指南","uri":"/zh-cn/instal-miktex-mactex-texlive/#初学者推荐"},{"categories":["LaTeX"],"content":" 22.2 高级用户推荐： 选择 TeX Live 以保持跨平台一致性 使用 VS Code + LaTeX Workshop 通过 Git 管理项目版本 ","date":"2025-10-08","objectID":"/zh-cn/instal-miktex-mactex-texlive/:10:2","series":null,"tags":["MiKTeX","MacTeX","TeX Live"],"title":"在不同操作系统平台上安装 MiKTeX、MacTeX 和 TeX Live 的指南","uri":"/zh-cn/instal-miktex-mactex-texlive/#高级用户推荐"},{"categories":["LaTeX"],"content":" 22.3 系统维护： 定期更新宏包 清理临时文件（.aux, .log） 备份模板与自定义样式 ","date":"2025-10-08","objectID":"/zh-cn/instal-miktex-mactex-texlive/:10:3","series":null,"tags":["MiKTeX","MacTeX","TeX Live"],"title":"在不同操作系统平台上安装 MiKTeX、MacTeX 和 TeX Live 的指南","uri":"/zh-cn/instal-miktex-mactex-texlive/#系统维护"},{"categories":["LaTeX"],"content":" 23 11. 更多学习资源 LaTeX Project CTAN（综合 TeX 归档网络） LaTeX Wikibook TeX Live 官方文档 TeX Stack Exchange ","date":"2025-10-08","objectID":"/zh-cn/instal-miktex-mactex-texlive/:11:0","series":null,"tags":["MiKTeX","MacTeX","TeX Live"],"title":"在不同操作系统平台上安装 MiKTeX、MacTeX 和 TeX Live 的指南","uri":"/zh-cn/instal-miktex-mactex-texlive/#11-更多学习资源"},{"categories":["LaTeX"],"content":" 24 12. 总结选择合适的 LaTeX 发行版取决于您的操作系统和需求： MiKTeX → 轻量级、适合初学者 MacTeX → 稳定、适合 macOS 用户 TeX Live → 通用、适用于所有平台 安装完成后，您即可开始撰写论文、学术文章或书籍，获得专业的排版效果。 祝您在 LaTeX 的世界中创作愉快——这是一种优雅而强大的写作工具。 ","date":"2025-10-08","objectID":"/zh-cn/instal-miktex-mactex-texlive/:12:0","series":null,"tags":["MiKTeX","MacTeX","TeX Live"],"title":"在不同操作系统平台上安装 MiKTeX、MacTeX 和 TeX Live 的指南","uri":"/zh-cn/instal-miktex-mactex-texlive/#12-总结"},{"categories":["LaTeX"],"content":"本文讨论Knuth和Lamport创建的文档排版系统TeX和LaTeX的历史，从1978年的开始到现代学术标准，重点关注发展、特性和未来前景。","date":"2025-10-06","objectID":"/zh-cn/sejarah-tex-dan-latex/","series":null,"tags":["TeX","LaTeX"],"title":"TeX和LaTeX的历史：数字文档排版系统的演变","uri":"/zh-cn/sejarah-tex-dan-latex/"},{"categories":["LaTeX"],"content":"本文讨论Knuth和Lamport创建的文档排版系统TeX和LaTeX的历史，从1978年的开始到现代学术标准，重点关注发展、特性和未来前景。 注意 要更深入地学习LaTeX，请访问 LaTeX学习指南 TeX和LaTeX是两种文档排版工具，彻底改变了技术和科学文档的编排方式，特别是在数学、物理和计算机科学领域。本文将全面、准确、详尽地讨论TeX和LaTeX的发展历史，从它们的起源到现代时代的影响。 ","date":"2025-10-06","objectID":"/zh-cn/sejarah-tex-dan-latex/:0:0","series":null,"tags":["TeX","LaTeX"],"title":"TeX和LaTeX的历史：数字文档排版系统的演变","uri":"/zh-cn/sejarah-tex-dan-latex/#"},{"categories":["LaTeX"],"content":" 1 起源：TeX的背景TeX由Donald E. Knuth创建，他是一位著名的计算机科学家和斯坦福大学的荣誉退休教授。开发TeX的想法产生于1970年代末期，当时Knuth对他的第二本书《计算机程序设计艺术》第2卷的印刷质量感到不满。那时，出版业正从传统的排字技术（金属活字）转向数字照相排版系统，这些系统往往产生低质量的输出，特别是对于数学公式。 1977年，Knuth开始了一个雄心勃勃的项目，创建一个能够生成高质量文档的数字排版系统，特别是针对包含复杂数学符号的文本。他的目标是创建一个不仅美观，而且灵活，并且技术作者无需深厚的图形设计专业知识即可使用的工具。这个项目产生了TeX，一个设计用于以高精度排版生成文档的排版系统。 ","date":"2025-10-06","objectID":"/zh-cn/sejarah-tex-dan-latex/:1:0","series":null,"tags":["TeX","LaTeX"],"title":"TeX和LaTeX的历史：数字文档排版系统的演变","uri":"/zh-cn/sejarah-tex-dan-latex/#起源tex的背景"},{"categories":["LaTeX"],"content":" 2 TeX的发展","date":"2025-10-06","objectID":"/zh-cn/sejarah-tex-dan-latex/:2:0","series":null,"tags":["TeX","LaTeX"],"title":"TeX和LaTeX的历史：数字文档排版系统的演变","uri":"/zh-cn/sejarah-tex-dan-latex/#tex的发展"},{"categories":["LaTeX"],"content":" 2.1 1. 首次发布（1978年）Knuth于1978年发布了TeX的早期版本。该系统用SAIL编程语言编写，在斯坦福的大型计算机上运行。TeX旨在提供对文档布局的高级控制，包括间距、字体设置以及数学公式等元素的放置。TeX的主要创新之一是断行算法，它确保文本以最佳美学方式排列，避免单词间距不均匀或行过于密集。 ","date":"2025-10-06","objectID":"/zh-cn/sejarah-tex-dan-latex/:2:1","series":null,"tags":["TeX","LaTeX"],"title":"TeX和LaTeX的历史：数字文档排版系统的演变","uri":"/zh-cn/sejarah-tex-dan-latex/#1-首次发布1978年"},{"categories":["LaTeX"],"content":" 2.2 2. TeX82（1982年）TeX的早期版本有局限性，包括对特定硬件的依赖。为了解决这个问题，Knuth在1982年使用Pascal编程语言重写了TeX，并引入了基于Metafont的字体系统，允许创建可缩放的数字字体。这个版本被称为TeX82，成为至今仍在使用的标准。Knuth还确保TeX是开源的，允许社区开发和修改系统。 ","date":"2025-10-06","objectID":"/zh-cn/sejarah-tex-dan-latex/:2:2","series":null,"tags":["TeX","LaTeX"],"title":"TeX和LaTeX的历史：数字文档排版系统的演变","uri":"/zh-cn/sejarah-tex-dan-latex/#2-tex821982年"},{"categories":["LaTeX"],"content":" 2.3 3. TeX的主要特性 数学排版： TeX设计用于出色地处理数学符号，允许用相对简单的语法编写复杂公式。 Metafont： 该系统允许创建高质量的数字字体，可以根据文档需求进行定制。 可移植性： TeX设计为可在各种平台上运行，使其成为各种计算机系统的灵活工具。 稳定性： Knuth承诺保持TeX的兼容性，以便使用TeX创建的文档即使在数十年后仍能正确处理。 ","date":"2025-10-06","objectID":"/zh-cn/sejarah-tex-dan-latex/:2:3","series":null,"tags":["TeX","LaTeX"],"title":"TeX和LaTeX的历史：数字文档排版系统的演变","uri":"/zh-cn/sejarah-tex-dan-latex/#3-tex的主要特性"},{"categories":["LaTeX"],"content":" 2.4 4. 出版和采用TeX82发布后，美国数学学会（AMS）将TeX作为数学期刊和出版物的标准排版工具。科学界，特别是数学、物理和计算机科学领域，开始广泛使用它，因为它能够生成美观且一致的文档。 ","date":"2025-10-06","objectID":"/zh-cn/sejarah-tex-dan-latex/:2:4","series":null,"tags":["TeX","LaTeX"],"title":"TeX和LaTeX的历史：数字文档排版系统的演变","uri":"/zh-cn/sejarah-tex-dan-latex/#4-出版和采用"},{"categories":["LaTeX"],"content":" 3 LaTeX的诞生尽管TeX非常强大，但其复杂的语法和面向低级细节的特性使非技术用户难以使用。为了解决这个问题，SRI International的计算机科学家Leslie Lamport在1980年代初期开发了LaTeX。 ","date":"2025-10-06","objectID":"/zh-cn/sejarah-tex-dan-latex/:3:0","series":null,"tags":["TeX","LaTeX"],"title":"TeX和LaTeX的历史：数字文档排版系统的演变","uri":"/zh-cn/sejarah-tex-dan-latex/#latex的诞生"},{"categories":["LaTeX"],"content":" 3.1 1. LaTeX 2.09（1985年）LaTeX是\"Lamport TeX\"的缩写，是一组基于TeX的宏，简化了文档编写过程。LaTeX允许用户专注于文档内容，如结构（章节、部分、小节）和格式（标题、目录、参考文献），而无需手动设置排版细节。LaTeX的第一个版本于1985年发布，因其易用性而迅速在学术界流行起来。 ","date":"2025-10-06","objectID":"/zh-cn/sejarah-tex-dan-latex/:3:1","series":null,"tags":["TeX","LaTeX"],"title":"TeX和LaTeX的历史：数字文档排版系统的演变","uri":"/zh-cn/sejarah-tex-dan-latex/#1-latex-2091985年"},{"categories":["LaTeX"],"content":" 3.2 2. LaTeX的主要特性 文档结构： LaTeX引入了文档类的概念（如文章、书籍或报告）和高级命令，用于以清晰的结构组织文档。 参考文献管理： LaTeX支持BibTeX等工具来自动管理引用和参考文献列表。 可扩展性： 用户可以创建宏和附加包来根据需要自定义LaTeX。 视觉一致性： LaTeX确保文档具有一致和专业的布局，无需设计专业知识。 ","date":"2025-10-06","objectID":"/zh-cn/sejarah-tex-dan-latex/:3:2","series":null,"tags":["TeX","LaTeX"],"title":"TeX和LaTeX的历史：数字文档排版系统的演变","uri":"/zh-cn/sejarah-tex-dan-latex/#2-latex的主要特性"},{"categories":["LaTeX"],"content":" 3.3 3. LaTeX2e（1994年）1994年，由Frank Mittelbach领导的团队发布了LaTeX2e，这是一次重大更新，提高了LaTeX的模块化和兼容性。LaTeX2e引入了包系统，允许用户在不改变核心系统的情况下添加新功能。这个版本至今仍是标准，定期更新以支持新功能，如Unicode字体和与现代技术的集成。 ","date":"2025-10-06","objectID":"/zh-cn/sejarah-tex-dan-latex/:3:3","series":null,"tags":["TeX","LaTeX"],"title":"TeX和LaTeX的历史：数字文档排版系统的演变","uri":"/zh-cn/sejarah-tex-dan-latex/#3-latex2e1994年"},{"categories":["LaTeX"],"content":" 4 演变和影响","date":"2025-10-06","objectID":"/zh-cn/sejarah-tex-dan-latex/:4:0","series":null,"tags":["TeX","LaTeX"],"title":"TeX和LaTeX的历史：数字文档排版系统的演变","uri":"/zh-cn/sejarah-tex-dan-latex/#演变和影响"},{"categories":["LaTeX"],"content":" 4.1 1. 全球采用TeX和LaTeX已成为科学文档排版的事实标准。世界各地的学术期刊、图书出版商和教育机构使用LaTeX来生成高质量文档。开源社区还产生了数千个附加包，如用于高级数学的AMS-LaTeX、用于演示的Beamer和用于图形的TikZ。 ","date":"2025-10-06","objectID":"/zh-cn/sejarah-tex-dan-latex/:4:1","series":null,"tags":["TeX","LaTeX"],"title":"TeX和LaTeX的历史：数字文档排版系统的演变","uri":"/zh-cn/sejarah-tex-dan-latex/#1-全球采用"},{"categories":["LaTeX"],"content":" 4.2 2. 社区和支持TeX和LaTeX社区非常活跃，有像1980年成立的TeX用户组（TUG）这样的组织来支持用户和开发者。像CTAN（综合TeX存档网络）这样的平台提供了与TeX和LaTeX相关的软件、包和文档的集中存储库。 ","date":"2025-10-06","objectID":"/zh-cn/sejarah-tex-dan-latex/:4:2","series":null,"tags":["TeX","LaTeX"],"title":"TeX和LaTeX的历史：数字文档排版系统的演变","uri":"/zh-cn/sejarah-tex-dan-latex/#2-社区和支持"},{"categories":["LaTeX"],"content":" 4.3 3. 现代发展 XeTeX和LuaTeX： 为了克服字体和多语言支持的限制，开发了XeTeX（2004年）和LuaTeX（2007年）等变体。XeTeX支持OpenType字体和Unicode，而LuaTeX集成了Lua编程语言以获得更大的灵活性。 现代编辑器和工具： 像TeXShop、Overleaf和TeXworks这样的编辑器使LaTeX的使用更加容易，特别是像Overleaf这样的基于Web的界面，允许实时协作。 与新技术的集成： LaTeX现在不仅用于打印文档，还用于生成交互式PDF、网站，甚至移动应用程序。 ","date":"2025-10-06","objectID":"/zh-cn/sejarah-tex-dan-latex/:4:3","series":null,"tags":["TeX","LaTeX"],"title":"TeX和LaTeX的历史：数字文档排版系统的演变","uri":"/zh-cn/sejarah-tex-dan-latex/#3-现代发展"},{"categories":["LaTeX"],"content":" 4.4 4. 对学术界和工业界的影响LaTeX已成为学术界的重要工具，因为它能够生成一致且易于更新的文档。许多科学会议和期刊要求手稿用LaTeX编写，以确保质量和兼容性。在学术界之外，LaTeX用于出版业、技术报告撰写，甚至简历或法律文件的制作。 ","date":"2025-10-06","objectID":"/zh-cn/sejarah-tex-dan-latex/:4:4","series":null,"tags":["TeX","LaTeX"],"title":"TeX和LaTeX的历史：数字文档排版系统的演变","uri":"/zh-cn/sejarah-tex-dan-latex/#4-对学术界和工业界的影响"},{"categories":["LaTeX"],"content":" 5 挑战和批评尽管TeX和LaTeX非常强大，但它们并非没有批评： 学习曲线： LaTeX语法对初学者来说可能令人生畏，特别是对于那些习惯使用Microsoft Word等文字处理软件的人。 调试复杂性： LaTeX代码中的错误通常会产生难以理解的错误消息。 视觉限制： LaTeX不是为高级图形设计而设计的，因此用户通常需要额外的工具，如Adobe Illustrator来处理复杂的图形。 ","date":"2025-10-06","objectID":"/zh-cn/sejarah-tex-dan-latex/:5:0","series":null,"tags":["TeX","LaTeX"],"title":"TeX和LaTeX的历史：数字文档排版系统的演变","uri":"/zh-cn/sejarah-tex-dan-latex/#挑战和批评"},{"categories":["LaTeX"],"content":" 6 TeX和LaTeX的未来尽管文档排版技术不断发展，但TeX和LaTeX因其强大的社区和适应能力而保持相关性。像LaTeX3这样的项目自1990年代以来一直在开发中，旨在用更现代和模块化的架构更新LaTeX核心。此外，与基于Web的技术和人工智能（如自动写作工具）的集成为LaTeX在未来的使用开辟了新的机会。 ","date":"2025-10-06","objectID":"/zh-cn/sejarah-tex-dan-latex/:6:0","series":null,"tags":["TeX","LaTeX"],"title":"TeX和LaTeX的历史：数字文档排版系统的演变","uri":"/zh-cn/sejarah-tex-dan-latex/#tex和latex的未来"},{"categories":["LaTeX"],"content":" 7 结论TeX和LaTeX是数字文档排版历史上的重要里程碑。从Donald Knuth创建高质量排版系统的愿景开始，TeX已发展成为世界各地广泛使用的工具。LaTeX以其更用户友好的方法，将TeX的覆盖范围扩展到更广泛的社区。凭借活跃的开源社区支持和对现代技术的适应，TeX和LaTeX将继续成为未来技术和科学作家的重要工具。 ","date":"2025-10-06","objectID":"/zh-cn/sejarah-tex-dan-latex/:7:0","series":null,"tags":["TeX","LaTeX"],"title":"TeX和LaTeX的历史：数字文档排版系统的演变","uri":"/zh-cn/sejarah-tex-dan-latex/#结论"},{"categories":["LaTeX"],"content":" 8 参考文献 Knuth, D. E. (1999). The TeXbook. Addison-Wesley. Lamport, L. (1994). LaTeX: A Document Preparation System. Addison-Wesley. TeX用户组（TUG）官方网站：https://www.tug.org 综合TeX存档网络（CTAN）：https://www.ctan.org ","date":"2025-10-06","objectID":"/zh-cn/sejarah-tex-dan-latex/:8:0","series":null,"tags":["TeX","LaTeX"],"title":"TeX和LaTeX的历史：数字文档排版系统的演变","uri":"/zh-cn/sejarah-tex-dan-latex/#参考文献"},{"categories":["Linux"],"content":"本文介紹一款廣受歡迎、對使用者友善且用途廣泛的 Linux 發行版——Ubuntu。","date":"2025-10-06","objectID":"/zh-cn/lebih-dekat-dengan-ubuntu/","series":null,"tags":["作業系統","Linux"],"title":"認識 Ubuntu：適合各種需求的友善使用者 Linux 發行版","uri":"/zh-cn/lebih-dekat-dengan-ubuntu/"},{"categories":["Linux"],"content":"本文介紹一款廣受歡迎、對使用者友善、容易上手並適合各種用途的 Linux 發行版——Ubuntu。 ","date":"2025-10-06","objectID":"/zh-cn/lebih-dekat-dengan-ubuntu/:0:0","series":null,"tags":["作業系統","Linux"],"title":"認識 Ubuntu：適合各種需求的友善使用者 Linux 發行版","uri":"/zh-cn/lebih-dekat-dengan-ubuntu/#"},{"categories":["Linux"],"content":" 1 前言在付費作業系統（operating system）主導的時代，Ubuntu 以「自由、安全與高效率」為理念，提供無須授權費的替代方案。作為全球最受歡迎的 Linux 發行版之一，Ubuntu 已證明其對初學者及專業 IT 人員而言，皆是穩定且易用的系統選擇。 ","date":"2025-10-06","objectID":"/zh-cn/lebih-dekat-dengan-ubuntu/:1:0","series":null,"tags":["作業系統","Linux"],"title":"認識 Ubuntu：適合各種需求的友善使用者 Linux 發行版","uri":"/zh-cn/lebih-dekat-dengan-ubuntu/#前言"},{"categories":["Linux"],"content":" 2 什麼是 Ubuntu？Ubuntu 是一個基於 Linux 的作業系統，由 Canonical Ltd. 公司開發，該公司由南非企業家 Mark Shuttleworth 創立。「Ubuntu」這個名稱源自非洲哲學，意為「人性與共」或「我之存在，因為我們同在」，象徵著社群精神與分享的核心理念。 此系統建立於 Debian 發行版之上，Debian 是歷史最悠久且最穩定的 Linux 系統之一。Ubuntu 以 Debian 為基礎，並重新包裝成更易於使用的介面，使初學者能輕鬆進入 Linux 世界。 ","date":"2025-10-06","objectID":"/zh-cn/lebih-dekat-dengan-ubuntu/:2:0","series":null,"tags":["作業系統","Linux"],"title":"認識 Ubuntu：適合各種需求的友善使用者 Linux 發行版","uri":"/zh-cn/lebih-dekat-dengan-ubuntu/#什麼是-ubuntu"},{"categories":["Linux"],"content":" 3 Ubuntu 的主要特點","date":"2025-10-06","objectID":"/zh-cn/lebih-dekat-dengan-ubuntu/:3:0","series":null,"tags":["作業系統","Linux"],"title":"認識 Ubuntu：適合各種需求的友善使用者 Linux 發行版","uri":"/zh-cn/lebih-dekat-dengan-ubuntu/#ubuntu-的主要特點"},{"categories":["Linux"],"content":" 3.1 1. 開源與免費（Open Source \u0026 Free）與商業作業系統不同，Ubuntu 完全免費下載、使用與散佈。其開放原始碼（open source）特性讓任何人都能檢視、修改與改進程式碼，這不僅關乎價格，更體現了技術自由與透明性。 ","date":"2025-10-06","objectID":"/zh-cn/lebih-dekat-dengan-ubuntu/:3:1","series":null,"tags":["作業系統","Linux"],"title":"認識 Ubuntu：適合各種需求的友善使用者 Linux 發行版","uri":"/zh-cn/lebih-dekat-dengan-ubuntu/#1-開源與免費open-source--free"},{"categories":["Linux"],"content":" 3.2 2. 強大的安全性（Security）Ubuntu 將安全視為首要考量。系統內建防火牆（firewall）、資料加密（encryption）與自動安全更新。基於 Linux 架構的設計，Ubuntu 對病毒與惡意軟體的防護力遠高於其他系統。 ","date":"2025-10-06","objectID":"/zh-cn/lebih-dekat-dengan-ubuntu/:3:2","series":null,"tags":["作業系統","Linux"],"title":"認識 Ubuntu：適合各種需求的友善使用者 Linux 發行版","uri":"/zh-cn/lebih-dekat-dengan-ubuntu/#2-強大的安全性security"},{"categories":["Linux"],"content":" 3.3 3. 穩定與高效能（Stability \u0026 Performance）Ubuntu 提供長期支援版本（LTS, Long-Term Support），可獲得長達 5 年的更新與安全修補，非常適合企業環境或追求穩定的使用者。 ","date":"2025-10-06","objectID":"/zh-cn/lebih-dekat-dengan-ubuntu/:3:3","series":null,"tags":["作業系統","Linux"],"title":"認識 Ubuntu：適合各種需求的友善使用者 Linux 發行版","uri":"/zh-cn/lebih-dekat-dengan-ubuntu/#3-穩定與高效能stability--performance"},{"categories":["Linux"],"content":" 3.4 4. 直覺化的使用者介面（User Interface） Ubuntu 25.04 的 GNOME 桌面環境（desktop environment）現代且優雅 註：更多截圖請參閱 ubuntu.com/desktop Ubuntu 採用 GNOME 桌面環境，提供現代、整潔、且易於操作的使用體驗。畫面左側的 Dock 提供快速應用啟動，而「活動概覽（Activities Overview）」讓檔案與設定搜尋更方便。 ","date":"2025-10-06","objectID":"/zh-cn/lebih-dekat-dengan-ubuntu/:3:4","series":null,"tags":["作業系統","Linux"],"title":"認識 Ubuntu：適合各種需求的友善使用者 Linux 發行版","uri":"/zh-cn/lebih-dekat-dengan-ubuntu/#4-直覺化的使用者介面user-interface"},{"categories":["Linux"],"content":" 4 不同用途的 Ubuntu 版本 多種 Ubuntu 分支版本（flavors），針對不同使用需求設計 註：完整版本清單請見 ubuntu.com/desktop/flavours Ubuntu Desktop：完整圖形介面，適用於個人與辦公使用。 Ubuntu Server：為伺服器（server）與雲端（cloud computing）環境優化，無圖形介面以提升效能。 Ubuntu Studio：針對內容創作者設計，內建多媒體專業應用。 Kubuntu、Xubuntu、Lubuntu：分別採用 KDE、Xfce、LXQt 桌面環境，滿足不同效能需求。 ","date":"2025-10-06","objectID":"/zh-cn/lebih-dekat-dengan-ubuntu/:4:0","series":null,"tags":["作業系統","Linux"],"title":"認識 Ubuntu：適合各種需求的友善使用者 Linux 發行版","uri":"/zh-cn/lebih-dekat-dengan-ubuntu/#不同用途的-ubuntu-版本"},{"categories":["Linux"],"content":" 5 使用 Ubuntu 的優勢","date":"2025-10-06","objectID":"/zh-cn/lebih-dekat-dengan-ubuntu/:5:0","series":null,"tags":["作業系統","Linux"],"title":"認識 Ubuntu：適合各種需求的友善使用者 Linux 發行版","uri":"/zh-cn/lebih-dekat-dengan-ubuntu/#使用-ubuntu-的優勢"},{"categories":["Linux"],"content":" 5.1 活躍的社群支援Ubuntu 擁有全球最活躍的開源社群之一，提供豐富的論壇、文件與教學資源。當遇到問題時，通常能在社群中找到解決方案。 ","date":"2025-10-06","objectID":"/zh-cn/lebih-dekat-dengan-ubuntu/:5:1","series":null,"tags":["作業系統","Linux"],"title":"認識 Ubuntu：適合各種需求的友善使用者 Linux 發行版","uri":"/zh-cn/lebih-dekat-dengan-ubuntu/#活躍的社群支援"},{"categories":["Linux"],"content":" 5.2 廣泛的硬體相容性Ubuntu 支援多種硬體，從舊筆電到最新工作站。大部分驅動程式已預裝於系統中。 ","date":"2025-10-06","objectID":"/zh-cn/lebih-dekat-dengan-ubuntu/:5:2","series":null,"tags":["作業系統","Linux"],"title":"認識 Ubuntu：適合各種需求的友善使用者 Linux 發行版","uri":"/zh-cn/lebih-dekat-dengan-ubuntu/#廣泛的硬體相容性"},{"categories":["Linux"],"content":" 5.3 豐富的應用生態系 Ubuntu 軟體中心（Software Center）提供數千款免費應用 使用者可透過 Ubuntu 軟體中心輕鬆安裝應用，如 LibreOffice、Firefox、Chrome、VLC 等，無需命令列（command line）操作。 ","date":"2025-10-06","objectID":"/zh-cn/lebih-dekat-dengan-ubuntu/:5:3","series":null,"tags":["作業系統","Linux"],"title":"認識 Ubuntu：適合各種需求的友善使用者 Linux 發行版","uri":"/zh-cn/lebih-dekat-dengan-ubuntu/#豐富的應用生態系"},{"categories":["Linux"],"content":" 5.4 適合開發者（Developers）Ubuntu 為開發人員首選，支援多種程式語言與開發工具，並擁有優秀的 Unix 環境，非常適合用於網頁、行動或桌面應用開發。 ","date":"2025-10-06","objectID":"/zh-cn/lebih-dekat-dengan-ubuntu/:5:4","series":null,"tags":["作業系統","Linux"],"title":"認識 Ubuntu：適合各種需求的友善使用者 Linux 發行版","uri":"/zh-cn/lebih-dekat-dengan-ubuntu/#適合開發者developers"},{"categories":["Linux"],"content":" 6 安裝指南（Installation Guide） 備份重要資料（Backup） 檢查最低系統需求：CPU ≥ 2GHz、RAM ≥ 4GB、硬碟 ≥ 25GB 下載 ISO 映像檔（image file）並製作可開機 USB（bootable USB）。 從 USB 開機後選擇「Install Ubuntu」。 設定語言、鍵盤、網路與時區。 選擇安裝方式（單系統或雙重啟動 dual-boot）。 建立使用者帳戶（user account）。 等待 15–30 分鐘完成安裝後重新啟動系統。 ","date":"2025-10-06","objectID":"/zh-cn/lebih-dekat-dengan-ubuntu/:6:0","series":null,"tags":["作業系統","Linux"],"title":"認識 Ubuntu：適合各種需求的友善使用者 Linux 發行版","uri":"/zh-cn/lebih-dekat-dengan-ubuntu/#安裝指南installation-guide"},{"categories":["Linux"],"content":" 7 結論Ubuntu 是一款結合高效能、穩定性與易用性的完整作業系統，適合個人與企業使用。其強大的社群支援與開放原始碼精神，讓 Ubuntu 成為全球數百萬使用者的首選。 想嘗試 Ubuntu 嗎？立即前往 ubuntu.com 下載最新版本，展開你的開源之旅！ ","date":"2025-10-06","objectID":"/zh-cn/lebih-dekat-dengan-ubuntu/:7:0","series":null,"tags":["作業系統","Linux"],"title":"認識 Ubuntu：適合各種需求的友善使用者 Linux 發行版","uri":"/zh-cn/lebih-dekat-dengan-ubuntu/#結論"},{"categories":["Linux"],"content":"本文讨论了从 Windows 迁移到 Linux 的原因。","date":"2025-10-03","objectID":"/zh-cn/mengapa-memilih-linux/","series":null,"tags":["Linux"],"title":"为什么选择 Linux","uri":"/zh-cn/mengapa-memilih-linux/"},{"categories":["Linux"],"content":"本文探讨了从 Windows 迁移到 Linux 的理由。 ","date":"2025-10-03","objectID":"/zh-cn/mengapa-memilih-linux/:0:0","series":null,"tags":["Linux"],"title":"为什么选择 Linux","uri":"/zh-cn/mengapa-memilih-linux/#"},{"categories":["Linux"],"content":" 从 Windows 转向 Linux 的体验：十大理由 🚀不知不觉，作者已经使用 Linux 作为主要操作系统三年了。最初的动机是意识到使用盗版或破解软件的风险和不确定性。 在与来自不同 Linux 发行版社区的用户交流过程中，我萌生了彻底迁移到 Linux 的念头。 Ubuntu 是我尝试的第一个发行版。初次体验时，界面与 Windows 完全不同，这种“陌生感”反而激发了我强烈的探索欲。 默认办公套件是 LibreOffice，其中包括 Writer、Calc、Impress、Draw、Math 和 Base。 当然，刚开始使用 Linux 难免会遇到一些困难，但只要耐心适应，很快就能上手。😄 刚接触 Linux 的用户通常会经历一个阶段，称为 “distro hopping（跳发行版）” —— 即频繁更换不同的 Linux 发行版来尝试各种体验。 我尝试过的发行版包括： Debian Ubuntu MX Linux Antix Deepin Arch EndeavourOS Mabox Langit Ketujuh Garuda Fedora 此外，我还尝试过基于 Unix 的系统： FreeBSD GhostBSD 虽然换了不少系统，但水平似乎也没多大提升 😅 下面是我使用的桌面截图。你能猜出是哪一个发行版吗？ ","date":"2025-10-03","objectID":"/zh-cn/mengapa-memilih-linux/:0:0","series":null,"tags":["Linux"],"title":"为什么选择 Linux","uri":"/zh-cn/mengapa-memilih-linux/#从-windows-转向-linux-的体验十大理由-"},{"categories":["Linux"],"content":" 1 💡 十个选择 Linux 的理由","date":"2025-10-03","objectID":"/zh-cn/mengapa-memilih-linux/:1:0","series":null,"tags":["Linux"],"title":"为什么选择 Linux","uri":"/zh-cn/mengapa-memilih-linux/#-十个选择-linux-的理由"},{"categories":["Linux"],"content":" 1.1 1️⃣ 免费Linux 完全 免费。 您无需支付任何许可证费用（除非使用企业版，如 RHEL 或 SUSE Enterprise）。 与 Windows 不同，Linux 不需要激活，也不会出现 “Activate Windows” 的提示。 同时，您也无需冒险使用带病毒的破解补丁。 ","date":"2025-10-03","objectID":"/zh-cn/mengapa-memilih-linux/:1:1","series":null,"tags":["Linux"],"title":"为什么选择 Linux","uri":"/zh-cn/mengapa-memilih-linux/#1-免费"},{"categories":["Linux"],"content":" 1.2 2️⃣ 更安全 🔒每个系统都有漏洞，但 Linux 被认为是最安全的操作系统之一。 Windows 系统容易受到病毒和恶意软件攻击，而 Linux 的权限机制、软件仓库和更新系统使其更加稳固。 更棒的是，Linux 几乎不需要安装杀毒软件，这不仅节省时间，也节省金钱。💰 ","date":"2025-10-03","objectID":"/zh-cn/mengapa-memilih-linux/:1:2","series":null,"tags":["Linux"],"title":"为什么选择 Linux","uri":"/zh-cn/mengapa-memilih-linux/#2-更安全-"},{"categories":["Linux"],"content":" 1.3 3️⃣ 开源透明使用 Linux，就像买了一辆你能查看内部结构的汽车。 它的源代码完全公开，任何人都可以研究、修改和改进。 这种透明性意味着更高的信任度和更少的后门风险。 ","date":"2025-10-03","objectID":"/zh-cn/mengapa-memilih-linux/:1:3","series":null,"tags":["Linux"],"title":"为什么选择 Linux","uri":"/zh-cn/mengapa-memilih-linux/#3-开源透明"},{"categories":["Linux"],"content":" 1.4 4️⃣ 低配置也能流畅运行 ⚙️Windows 10/11 对硬件要求越来越高（建议至少 8GB RAM）， 而 Linux 能在老旧电脑上依然流畅运行。 许多轻量级发行版（如 Xubuntu、Lubuntu、Antix）能让十年前的笔记本焕发新生。 ","date":"2025-10-03","objectID":"/zh-cn/mengapa-memilih-linux/:1:4","series":null,"tags":["Linux"],"title":"为什么选择 Linux","uri":"/zh-cn/mengapa-memilih-linux/#4-低配置也能流畅运行-"},{"categories":["Linux"],"content":" 1.5 5️⃣ 自由定制 🎨Linux 的最大魅力之一就是高度可定制化。 你可以自由选择桌面环境： GNOME：简洁、现代、支持手势操作 KDE Plasma：高度可定制、动画流畅 Cinnamon / Budgie / Xfce：轻量又实用 此外，还可以使用各种主题、图标包，甚至通过 Conky 显示系统信息，让桌面更酷炫！🔥 ","date":"2025-10-03","objectID":"/zh-cn/mengapa-memilih-linux/:1:5","series":null,"tags":["Linux"],"title":"为什么选择 Linux","uri":"/zh-cn/mengapa-memilih-linux/#5-自由定制-"},{"categories":["Linux"],"content":" 1.6 6️⃣ 程序员的理想系统 👨‍💻Linux 支持几乎所有主要编程语言（Python、C/C++、Java、Ruby 等）， 并且内置强大的终端、SSH 支持、包管理器和脚本系统。 这使得开发、测试和部署工作变得更加高效。 ","date":"2025-10-03","objectID":"/zh-cn/mengapa-memilih-linux/:1:6","series":null,"tags":["Linux"],"title":"为什么选择 Linux","uri":"/zh-cn/mengapa-memilih-linux/#6-程序员的理想系统-"},{"categories":["Linux"],"content":" 1.7 7️⃣ 官方“应用商店” 🛍️通过 Software Center（如 GNOME Software 或 KDE Discover）， 安装软件变得非常简单。 现在的 Linux 支持 Snap、Flatpak、AppImage 等格式， 安装现代应用无需担心兼容性问题。 ","date":"2025-10-03","objectID":"/zh-cn/mengapa-memilih-linux/:1:7","series":null,"tags":["Linux"],"title":"为什么选择 Linux","uri":"/zh-cn/mengapa-memilih-linux/#7-官方应用商店-"},{"categories":["Linux"],"content":" 1.8 8️⃣ 多种发行版可选 🐧与 Windows 不同，Linux 有成百上千种发行版。 无论你是开发者、设计师、学生还是系统管理员， 都能找到适合自己的版本，比如： Ubuntu（通用、稳定） Arch（极客首选） Kali Linux（渗透测试） Mint（适合新手） ","date":"2025-10-03","objectID":"/zh-cn/mengapa-memilih-linux/:1:8","series":null,"tags":["Linux"],"title":"为什么选择 Linux","uri":"/zh-cn/mengapa-memilih-linux/#8-多种发行版可选-"},{"categories":["Linux"],"content":" 1.9 9️⃣ 高可靠性 ⚡Windows 用久了会变慢，经常需要重装。 而 Linux 能长期保持稳定，不会轻易崩溃。 服务器领域几乎全部使用 Linux， 包括 Google、Facebook、NASA 等科技巨头。 ","date":"2025-10-03","objectID":"/zh-cn/mengapa-memilih-linux/:1:9","series":null,"tags":["Linux"],"title":"为什么选择 Linux","uri":"/zh-cn/mengapa-memilih-linux/#9-高可靠性-"},{"categories":["Linux"],"content":" 1.10 🔟 强大的社区支持 🤝如果遇到问题，只需在论坛、Reddit 或 Telegram 群中发帖， 就会有热心的用户提供详细解决方案。 Linux 社区以分享、互助著称，是其最宝贵的财富之一。❤️ ","date":"2025-10-03","objectID":"/zh-cn/mengapa-memilih-linux/:1:10","series":null,"tags":["Linux"],"title":"为什么选择 Linux","uri":"/zh-cn/mengapa-memilih-linux/#-强大的社区支持-"},{"categories":["Linux"],"content":" 2 🧩 总结以上就是我从 Windows 转向 Linux 的 十大理由。 尽管某些商业软件或游戏尚未完全支持 Linux， 但生态正在快速成长，越来越多开发者加入进来。 Linux 不仅免费、安全、稳定，还让你真正“掌控”电脑。 如果你对它感兴趣，不妨试试一个发行版，也许会爱上它。😄 👉 那么，你准备好尝试 Linux 了吗？ ","date":"2025-10-03","objectID":"/zh-cn/mengapa-memilih-linux/:2:0","series":null,"tags":["Linux"],"title":"为什么选择 Linux","uri":"/zh-cn/mengapa-memilih-linux/#-总结"},{"categories":["Linux"],"content":"本文讨论各种Linux发行版中使用的桌面环境（desktop environment）","date":"2025-10-02","objectID":"/zh-cn/lingkungan-desktop-linux/","series":null,"tags":["Linux"],"title":"Linux桌面环境","uri":"/zh-cn/lingkungan-desktop-linux/"},{"categories":["Linux"],"content":"本文讨论各种Linux发行版中使用的桌面环境（desktop environment） 注意 注意：本文由AI技术辅助生成，并经过人工审核以确保信息的准确性和清晰度。 ","date":"2025-10-02","objectID":"/zh-cn/lingkungan-desktop-linux/:0:0","series":null,"tags":["Linux"],"title":"Linux桌面环境","uri":"/zh-cn/lingkungan-desktop-linux/#"},{"categories":["Linux"],"content":" Linux桌面环境：概述、组件和热门选择","date":"2025-10-02","objectID":"/zh-cn/lingkungan-desktop-linux/:0:0","series":null,"tags":["Linux"],"title":"Linux桌面环境","uri":"/zh-cn/lingkungan-desktop-linux/#linux桌面环境概述组件和热门选择"},{"categories":["Linux"],"content":" 1 概述对于Linux初学者来说，新术语往往令人困惑。其中一个经常遇到的术语是桌面环境或Desktop Environment (DE)。 桌面环境是Linux使用体验的重要组成部分。本文将讨论： 什么是桌面环境以及我们为什么需要它 DE的主要组件 热门桌面环境选择 桌面环境的变体（fork和spin） 通过理解这些，初学者可以更容易地选择适合自己需求和偏好的DE。 ","date":"2025-10-02","objectID":"/zh-cn/lingkungan-desktop-linux/:1:0","series":null,"tags":["Linux"],"title":"Linux桌面环境","uri":"/zh-cn/lingkungan-desktop-linux/#概述"},{"categories":["Linux"],"content":" 2 什么是桌面环境？**桌面环境（DE）是一组软件，提供图形用户界面（GUI）**来与操作系统交互。 DE中的组件通常包括： 文件管理器 图标和主题 壁纸和小部件 面板和菜单 内置应用程序（例如文本编辑器、计算器、媒体播放器，甚至网页浏览器） 大多数Linux发行版以两个版本发布： 服务器版（无GUI，仅CLI/命令行界面） 桌面版（通过默认DE提供GUI） 例如，Ubuntu Desktop附带GNOME作为默认DE。我们可以使用以下命令检查正在使用的DE： bash echo $XDG_CURRENT_DESKTOP 输出可能类似于： text ubuntu:GNOME 没有DE，用户只能通过CLI交互。虽然许多有经验的用户更喜欢CLI，但DE的存在对初学者适应Linux非常有帮助。 ","date":"2025-10-02","objectID":"/zh-cn/lingkungan-desktop-linux/:2:0","series":null,"tags":["Linux"],"title":"Linux桌面环境","uri":"/zh-cn/lingkungan-desktop-linux/#什么是桌面环境"},{"categories":["Linux"],"content":" 3 桌面环境的组件桌面环境包括以下视觉和功能元素： 文件管理器 面板和菜单 主题、图标和字体 窗口管理器 应用程序启动器 终端模拟器 工作区/虚拟工作空间 系统托盘 光标/指针 此外，DE通常配备内置应用程序，例如： 文本编辑器 计算器 音频/视频播放器 网页浏览器 文档/PDF查看器 存档管理器 资源监视器 简单来说，构成Linux外观和用户体验的所有内容都是桌面环境的一部分。 ","date":"2025-10-02","objectID":"/zh-cn/lingkungan-desktop-linux/:3:0","series":null,"tags":["Linux"],"title":"Linux桌面环境","uri":"/zh-cn/lingkungan-desktop-linux/#桌面环境的组件"},{"categories":["Linux"],"content":" 4 选择桌面环境由于有许多DE选择，选择适合需求的很重要。可以考虑的因素包括： 资源使用（轻量级 vs 重量级） 外观（经典 vs 现代 vs 极简） 定制性（灵活 vs 简单） 性能（适合旧设备或现代设备） 没有\"正确\"或\"错误\"的选择。例如： 旧笔记本电脑用户更适合轻量级DE，如Xfce或MATE。 喜欢现代外观的用户可能会选择GNOME或Budgie。 喜欢最大定制性的用户通常选择KDE Plasma。 要点是，选择在外观上舒适且符合设备性能的DE。 ","date":"2025-10-02","objectID":"/zh-cn/lingkungan-desktop-linux/:4:0","series":null,"tags":["Linux"],"title":"Linux桌面环境","uri":"/zh-cn/lingkungan-desktop-linux/#选择桌面环境"},{"categories":["Linux"],"content":" 5 热门桌面环境","date":"2025-10-02","objectID":"/zh-cn/lingkungan-desktop-linux/:5:0","series":null,"tags":["Linux"],"title":"Linux桌面环境","uri":"/zh-cn/lingkungan-desktop-linux/#热门桌面环境"},{"categories":["Linux"],"content":" 5.1 GNOME 优点：简单、直观、现代，资源占用相对较低。 适合：初学者和想要简洁清晰桌面体验的用户。 默认发行版示例：Ubuntu、Fedora。 ","date":"2025-10-02","objectID":"/zh-cn/lingkungan-desktop-linux/:5:1","series":null,"tags":["Linux"],"title":"Linux桌面环境","uri":"/zh-cn/lingkungan-desktop-linux/#gnome"},{"categories":["Linux"],"content":" 5.2 KDE Plasma 优点：高度可定制，外观类似Windows，现在比旧版本更节省资源。 适合：想要完全控制桌面外观和功能的用户。 默认发行版示例：Kubuntu、openSUSE。 ","date":"2025-10-02","objectID":"/zh-cn/lingkungan-desktop-linux/:5:2","series":null,"tags":["Linux"],"title":"Linux桌面环境","uri":"/zh-cn/lingkungan-desktop-linux/#kde-plasma"},{"categories":["Linux"],"content":" 5.3 Budgie 优点：极简、优雅、易于使用，具有适度的定制性。 适合：想要美观和熟悉桌面的用户。 默认发行版示例：Solus、Ubuntu Budgie。 ","date":"2025-10-02","objectID":"/zh-cn/lingkungan-desktop-linux/:5:3","series":null,"tags":["Linux"],"title":"Linux桌面环境","uri":"/zh-cn/lingkungan-desktop-linux/#budgie"},{"categories":["Linux"],"content":" 5.4 Xfce 优点：非常轻量，支持旧设备，稳定，视觉上仍然令人愉悦。 适合：低规格设备或想要快速系统而不需要过多功能的用户。 默认发行版示例：Xubuntu、Manjaro Xfce。 ","date":"2025-10-02","objectID":"/zh-cn/lingkungan-desktop-linux/:5:4","series":null,"tags":["Linux"],"title":"Linux桌面环境","uri":"/zh-cn/lingkungan-desktop-linux/#xfce"},{"categories":["Linux"],"content":" 5.5 MATE 优点：轻量、传统、稳定，类似GNOME 2。 适合：喜欢经典布局和高效率的用户。 默认发行版示例：Ubuntu MATE、Linux Mint MATE。 此外，还有其他DE，如Cinnamon（Linux Mint）、LXQt/LXDE（轻量级）和Pantheon（elementary OS）。每个都有自己独特的特点。 ","date":"2025-10-02","objectID":"/zh-cn/lingkungan-desktop-linux/:5:5","series":null,"tags":["Linux"],"title":"Linux桌面环境","uri":"/zh-cn/lingkungan-desktop-linux/#mate"},{"categories":["Linux"],"content":" 6 桌面环境的变体除了官方版本，许多DE都有变体，以fork或spin的形式存在。 ","date":"2025-10-02","objectID":"/zh-cn/lingkungan-desktop-linux/:6:0","series":null,"tags":["Linux"],"title":"Linux桌面环境","uri":"/zh-cn/lingkungan-desktop-linux/#桌面环境的变体"},{"categories":["Linux"],"content":" 6.1 Fork（分支） Fork是现有DE的衍生版本，通常是为了保留旧功能或添加新功能而创建的。 示例：MATE是GNOME 2的fork，在GNOME 3发布后创建。 ","date":"2025-10-02","objectID":"/zh-cn/lingkungan-desktop-linux/:6:1","series":null,"tags":["Linux"],"title":"Linux桌面环境","uri":"/zh-cn/lingkungan-desktop-linux/#fork分支"},{"categories":["Linux"],"content":" 6.2 Spin（衍生版） Spin是官方发行版的版本，使用与主要版本不同的DE。 示例：Kubuntu是Ubuntu的spin，使用KDE Plasma。 目的是为流行发行版的用户提供其他DE选择，而无需手动安装。 ","date":"2025-10-02","objectID":"/zh-cn/lingkungan-desktop-linux/:6:2","series":null,"tags":["Linux"],"title":"Linux桌面环境","uri":"/zh-cn/lingkungan-desktop-linux/#spin衍生版"},{"categories":["Linux"],"content":" 7 结论 **桌面环境（DE）**是允许用户以可视方式与Linux交互的图形界面。 没有DE，Linux只是需要文本命令的CLI。 有各种流行的DE：GNOME、KDE Plasma、Budgie、Xfce、MATE、Cinnamon、LXQt等。 每个DE都有自己的优势，因此DE的选择应根据用户的需求和偏好进行调整。 除了官方版本，还有fork和spin丰富了Linux生态系统。 通过了解桌面环境，新用户可以选择适合的Linux体验，使学习Linux变得更加愉快和高效。 ","date":"2025-10-02","objectID":"/zh-cn/lingkungan-desktop-linux/:7:0","series":null,"tags":["Linux"],"title":"Linux桌面环境","uri":"/zh-cn/lingkungan-desktop-linux/#结论"},{"categories":["Linux"],"content":"本文介绍GNU/Linux操作系统的简要历史。","date":"2025-09-28","objectID":"/zh-cn/gnu-linux/","series":null,"tags":["操作系统","Linux"],"title":"GNU/Linux简史","uri":"/zh-cn/gnu-linux/"},{"categories":["Linux"],"content":"本文介绍GNU/Linux操作系统的简要历史。 注意 若想获得更完整的资料，请阅读 关于GNU 若想了解更权威的Linux信息，请阅读 关于Linux。 ","date":"2025-09-28","objectID":"/zh-cn/gnu-linux/:0:0","series":null,"tags":["操作系统","Linux"],"title":"GNU/Linux简史","uri":"/zh-cn/gnu-linux/#"},{"categories":["Linux"],"content":" 1 GNU/Linux的定义：自由与开源的操作系统GNU/Linux是由两个主要组件组成的操作系统：GNU项目和Linux内核。该系统以其自由和开源的特性而闻名，使用户能够自由地修改、分发和使用它，而不像专有操作系统那样受限。由于其灵活性、安全性和稳定性，GNU/Linux已成为从个人到大型组织的首选操作系统。 ","date":"2025-09-28","objectID":"/zh-cn/gnu-linux/:1:0","series":null,"tags":["操作系统","Linux"],"title":"GNU/Linux简史","uri":"/zh-cn/gnu-linux/#gnulinux的定义自由与开源的操作系统"},{"categories":["Linux"],"content":" 1.1 GNU/Linux简史 GNU项目： GNU项目由理查德·斯托曼（Richard Stallman）于1983年发起，他是一位程序员兼自由软件运动的倡导者。该项目的主要目标是创建一个完全自由和开源的操作系统。GNU是“GNU’s Not Unix”的递归缩写，表明它受Unix启发，但不使用Unix的源代码。该项目成功开发了许多关键组件，如编译器（GCC）、文本编辑器（Emacs）和其他系统工具。然而，GNU项目仍缺乏一个功能完善的内核。 Linux内核： 1991年，芬兰学生林纳斯·托瓦兹（Linus Torvalds）以个人项目的形式开发了Linux内核。该内核以自由许可的方式发布，并随着时间的推移吸引了大量开发者的贡献。Linux内核后来与GNU组件结合，形成了完整的操作系统，被称为GNU/Linux。 ","date":"2025-09-28","objectID":"/zh-cn/gnu-linux/:1:1","series":null,"tags":["操作系统","Linux"],"title":"GNU/Linux简史","uri":"/zh-cn/gnu-linux/#gnulinux简史"},{"categories":["Linux"],"content":" 1.2 什么是GNU/Linux？GNU/Linux是一个结合了Linux内核和GNU项目软件的操作系统。它以GPL（通用公共许可证）发布，确保用户拥有使用、学习、修改和分发源代码的自由。GNU/Linux的主要特点包括： 自由与开源： GNU/Linux是开源软件，这意味着其源代码对公众开放。用户可以根据需要修改和重新分发系统。 稳定与安全： GNU/Linux以高稳定性和高安全性著称。该系统很少崩溃或感染病毒，因此在服务器和关键系统中非常受欢迎。 灵活性： GNU/Linux可运行在各种硬件上，从个人电脑、服务器到嵌入式设备（如路由器和智能手机）。此外，不同的Linux发行版（distro）提供了多样化的配置和用户界面。 强大的社区支持： GNU/Linux拥有一个全球性的社区，包括开发者、用户和组织。该社区积极参与开发、文档编写和技术支持。 ","date":"2025-09-28","objectID":"/zh-cn/gnu-linux/:1:2","series":null,"tags":["操作系统","Linux"],"title":"GNU/Linux简史","uri":"/zh-cn/gnu-linux/#什么是gnulinux"},{"categories":["Linux"],"content":" 1.3 GNU/Linux发行版GNU/Linux的发行版（distro）是包含额外软件（如包管理器、用户界面和应用程序）的系统版本。一些流行的发行版包括： Ubuntu：用户友好，适合初学者。 Debian：以稳定性和坚持自由软件原则著称。 Fedora：由Red Hat支持，注重创新。 Arch Linux：面向高级用户，提供高度自由的自定义体验。 ","date":"2025-09-28","objectID":"/zh-cn/gnu-linux/:1:3","series":null,"tags":["操作系统","Linux"],"title":"GNU/Linux简史","uri":"/zh-cn/gnu-linux/#gnulinux发行版"},{"categories":["Linux"],"content":" 1.4 GNU/Linux的优势 无许可费用： GNU/Linux可免费下载和使用，节省了专有系统所需的许可费用。 高度可定制： 用户可以根据需要自定义系统，从用户界面到核心组件。 广泛的硬件支持： GNU/Linux支持多种硬件，包括其他系统不再支持的旧设备。 丰富的软件生态系统： GNU/Linux拥有数以千计的开源应用程序，涵盖办公、媒体和软件开发等多种用途。 ","date":"2025-09-28","objectID":"/zh-cn/gnu-linux/:1:4","series":null,"tags":["操作系统","Linux"],"title":"GNU/Linux简史","uri":"/zh-cn/gnu-linux/#gnulinux的优势"},{"categories":["Linux"],"content":" 2 结论GNU/Linux是一款强大、灵活且自由的操作系统，彻底改变了人们对软件的认识。通过结合GNU项目和Linux内核，该系统为各种需求提供了稳定、安全、可定制的解决方案。无论您是普通用户、开发者还是系统管理员，GNU/Linux都提供了一个可靠且高效的平台，助您工作与创新。 ","date":"2025-09-28","objectID":"/zh-cn/gnu-linux/:2:0","series":null,"tags":["操作系统","Linux"],"title":"GNU/Linux简史","uri":"/zh-cn/gnu-linux/#结论"},{"categories":["LaTeX"],"content":"本文讨论如何使用 KaTeX 在 Markdown 中编写数学表达式","date":"2025-09-27","objectID":"/zh-cn/menulis-ekspresi-matematika/","series":null,"tags":["LaTeX","KaTeX"],"title":"在 Markdown 中编写数学表达式","uri":"/zh-cn/menulis-ekspresi-matematika/"},{"categories":["LaTeX"],"content":"本文介绍如何使用 KaTeX 在 Markdown 中编写数学表达式。 ","date":"2025-09-27","objectID":"/zh-cn/menulis-ekspresi-matematika/:0:0","series":null,"tags":["LaTeX","KaTeX"],"title":"在 Markdown 中编写数学表达式","uri":"/zh-cn/menulis-ekspresi-matematika/#"},{"categories":["LaTeX"],"content":" 1 使用 KaTeX 在 Markdown 中编写数学表达式KaTeX 是一个 JavaScript 库，可在网页中使用 LaTeX 语法渲染数学表达式。KaTeX 以其 高速、轻量 和 高兼容性 而著称，非常适合在 Hugo、Jekyll 等静态网站或 HTML 页面中展示数学公式。 本文将介绍如何在 Markdown 中使用 KaTeX，包括基础配置、LaTeX 语法支持以及示例展示，帮助您创建具有专业数学排版的文档。 ","date":"2025-09-27","objectID":"/zh-cn/menulis-ekspresi-matematika/:1:0","series":null,"tags":["LaTeX","KaTeX"],"title":"在 Markdown 中编写数学表达式","uri":"/zh-cn/menulis-ekspresi-matematika/#使用-katex-在-markdown-中编写数学表达式"},{"categories":["LaTeX"],"content":" 2 为什么选择 KaTeX？KaTeX 相较于其他库（如 MathJax）具有以下优势： 🚀 速度快：即时渲染，不影响页面性能。 📦 体积小：文件比其他库更轻量。 ✍️ 兼容 Markdown：非常适合与各种平台的 Markdown 一起使用。 🎨 高质量输出：数学表达式排版精美、专业。 ","date":"2025-09-27","objectID":"/zh-cn/menulis-ekspresi-matematika/:2:0","series":null,"tags":["LaTeX","KaTeX"],"title":"在 Markdown 中编写数学表达式","uri":"/zh-cn/menulis-ekspresi-matematika/#为什么选择-katex"},{"categories":["LaTeX"],"content":" 3 使用 KaTeX 前的准备在编写数学表达式之前，需要将 KaTeX 集成到项目中。 ","date":"2025-09-27","objectID":"/zh-cn/menulis-ekspresi-matematika/:3:0","series":null,"tags":["LaTeX","KaTeX"],"title":"在 Markdown 中编写数学表达式","uri":"/zh-cn/menulis-ekspresi-matematika/#使用-katex-前的准备"},{"categories":["LaTeX"],"content":" 3.1 安装 KaTeX在 Hugo 或 Jekyll 等静态网站中，可从官网或 CDN 获取 KaTeX，并在 HTML 文件中添加以下代码： html \u003c!DOCTYPE html\u003e \u003chtml lang=\"zh-CN\"\u003e \u003chead\u003e \u003cmeta charset=\"UTF-8\"\u003e \u003ctitle\u003eKaTeX 示例\u003c/title\u003e \u003clink rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/katex@0.16.0/dist/katex.min.css\"\u003e \u003cscript defer src=\"https://cdn.jsdelivr.net/npm/katex@0.16.0/dist/katex.min.js\"\u003e\u003c/script\u003e \u003cscript defer src=\"https://cdn.jsdelivr.net/npm/katex@0.16.0/dist/contrib/auto-render.min.js\"\u003e\u003c/script\u003e \u003cscript\u003e document.addEventListener(\"DOMContentLoaded\", function () { renderMathInElement(document.body, { delimiters: [ { left: \"$$\", right: \"$$\", display: true }, { left: \"$\", right: \"$\", display: false } ] }); }); \u003c/script\u003e \u003c/head\u003e \u003cbody\u003e \u003ch1\u003eKaTeX 示例\u003c/h1\u003e \u003cp\u003e示例：$E = mc^2$\u003c/p\u003e \u003c/body\u003e \u003c/html\u003e ","date":"2025-09-27","objectID":"/zh-cn/menulis-ekspresi-matematika/:3:1","series":null,"tags":["LaTeX","KaTeX"],"title":"在 Markdown 中编写数学表达式","uri":"/zh-cn/menulis-ekspresi-matematika/#安装-katex"},{"categories":["LaTeX"],"content":" 4 在 Markdown 平台中的集成若您使用 Hugo 或 Jekyll，请确保在布局文件（如 baseof.html）中加载 KaTeX 脚本与样式，以便正确渲染数学公式。 ","date":"2025-09-27","objectID":"/zh-cn/menulis-ekspresi-matematika/:4:0","series":null,"tags":["LaTeX","KaTeX"],"title":"在 Markdown 中编写数学表达式","uri":"/zh-cn/menulis-ekspresi-matematika/#在-markdown-平台中的集成"},{"categories":["LaTeX"],"content":" 5 KaTeX 支持的 LaTeX 语法KaTeX 支持大部分标准的 LaTeX / TeX 语法。 👉 KaTeX 支持的命令列表 ","date":"2025-09-27","objectID":"/zh-cn/menulis-ekspresi-matematika/:5:0","series":null,"tags":["LaTeX","KaTeX"],"title":"在 Markdown 中编写数学表达式","uri":"/zh-cn/menulis-ekspresi-matematika/#katex-支持的-latex-语法"},{"categories":["LaTeX"],"content":" 5.1 常见类型 5.1.1 a. 行内数学公式使用 $...$ 来编写行内公式： markdown $E = mc^2$ $c = \\pm\\sqrt{a^2 + b^2}$ 结果： $E=mc^2$ $c = \\pm\\sqrt{a^2 + b^2}$ 5.1.2 b. 块级数学公式使用 $$...$$ 来书写块级公式： markdown $$ \\int_a^b f(x) \\, dx = F(b) - F(a) $$ 结果： ∫abf(x) dx=F(b)−F(a) \\int_a^b f(x) \\, dx = F(b) - F(a) ∫ab​f(x)dx=F(b)−F(a) 5.1.3 c. 常见数学运算符 加法：x + y 乘法：x \\cdot y 或 x \\times y 分数：\\frac{a}{b} 开方：\\sqrt{x} 5.1.4 d. 希腊字母与特殊符号 小写希腊字母：\\alpha, \\beta, \\gamma 大写希腊字母：\\Gamma, \\Delta 特殊符号：\\infty（无穷），\\partial（偏导），\\nabla（nabla算子） 5.1.5 e. 矩阵与方程组使用 \\begin{bmatrix} 可创建矩阵： markdown $$ \\begin{bmatrix} a \u0026 b \\\\ c \u0026 d \\end{bmatrix} $$ 结果： [abcd] \\begin{bmatrix} a \u0026 b \\\\ c \u0026 d \\end{bmatrix} [ac​bd​]","date":"2025-09-27","objectID":"/zh-cn/menulis-ekspresi-matematika/:5:1","series":null,"tags":["LaTeX","KaTeX"],"title":"在 Markdown 中编写数学表达式","uri":"/zh-cn/menulis-ekspresi-matematika/#常见类型"},{"categories":["LaTeX"],"content":" 5.1 常见类型 5.1.1 a. 行内数学公式使用 $...$ 来编写行内公式： markdown $E = mc^2$ $c = \\pm\\sqrt{a^2 + b^2}$ 结果： $E=mc^2$ $c = \\pm\\sqrt{a^2 + b^2}$ 5.1.2 b. 块级数学公式使用 $$...$$ 来书写块级公式： markdown $$ \\int_a^b f(x) \\, dx = F(b) - F(a) $$ 结果： ∫abf(x) dx=F(b)−F(a) \\int_a^b f(x) \\, dx = F(b) - F(a) ∫ab​f(x)dx=F(b)−F(a) 5.1.3 c. 常见数学运算符 加法：x + y 乘法：x \\cdot y 或 x \\times y 分数：\\frac{a}{b} 开方：\\sqrt{x} 5.1.4 d. 希腊字母与特殊符号 小写希腊字母：\\alpha, \\beta, \\gamma 大写希腊字母：\\Gamma, \\Delta 特殊符号：\\infty（无穷），\\partial（偏导），\\nabla（nabla算子） 5.1.5 e. 矩阵与方程组使用 \\begin{bmatrix} 可创建矩阵： markdown $$ \\begin{bmatrix} a \u0026 b \\\\ c \u0026 d \\end{bmatrix} $$ 结果： [abcd] \\begin{bmatrix} a \u0026 b \\\\ c \u0026 d \\end{bmatrix} [ac​bd​]","date":"2025-09-27","objectID":"/zh-cn/menulis-ekspresi-matematika/:5:1","series":null,"tags":["LaTeX","KaTeX"],"title":"在 Markdown 中编写数学表达式","uri":"/zh-cn/menulis-ekspresi-matematika/#a-行内数学公式"},{"categories":["LaTeX"],"content":" 5.1 常见类型 5.1.1 a. 行内数学公式使用 $...$ 来编写行内公式： markdown $E = mc^2$ $c = \\pm\\sqrt{a^2 + b^2}$ 结果： $E=mc^2$ $c = \\pm\\sqrt{a^2 + b^2}$ 5.1.2 b. 块级数学公式使用 $$...$$ 来书写块级公式： markdown $$ \\int_a^b f(x) \\, dx = F(b) - F(a) $$ 结果： ∫abf(x) dx=F(b)−F(a) \\int_a^b f(x) \\, dx = F(b) - F(a) ∫ab​f(x)dx=F(b)−F(a) 5.1.3 c. 常见数学运算符 加法：x + y 乘法：x \\cdot y 或 x \\times y 分数：\\frac{a}{b} 开方：\\sqrt{x} 5.1.4 d. 希腊字母与特殊符号 小写希腊字母：\\alpha, \\beta, \\gamma 大写希腊字母：\\Gamma, \\Delta 特殊符号：\\infty（无穷），\\partial（偏导），\\nabla（nabla算子） 5.1.5 e. 矩阵与方程组使用 \\begin{bmatrix} 可创建矩阵： markdown $$ \\begin{bmatrix} a \u0026 b \\\\ c \u0026 d \\end{bmatrix} $$ 结果： [abcd] \\begin{bmatrix} a \u0026 b \\\\ c \u0026 d \\end{bmatrix} [ac​bd​]","date":"2025-09-27","objectID":"/zh-cn/menulis-ekspresi-matematika/:5:1","series":null,"tags":["LaTeX","KaTeX"],"title":"在 Markdown 中编写数学表达式","uri":"/zh-cn/menulis-ekspresi-matematika/#b-块级数学公式"},{"categories":["LaTeX"],"content":" 5.1 常见类型 5.1.1 a. 行内数学公式使用 $...$ 来编写行内公式： markdown $E = mc^2$ $c = \\pm\\sqrt{a^2 + b^2}$ 结果： $E=mc^2$ $c = \\pm\\sqrt{a^2 + b^2}$ 5.1.2 b. 块级数学公式使用 $$...$$ 来书写块级公式： markdown $$ \\int_a^b f(x) \\, dx = F(b) - F(a) $$ 结果： ∫abf(x) dx=F(b)−F(a) \\int_a^b f(x) \\, dx = F(b) - F(a) ∫ab​f(x)dx=F(b)−F(a) 5.1.3 c. 常见数学运算符 加法：x + y 乘法：x \\cdot y 或 x \\times y 分数：\\frac{a}{b} 开方：\\sqrt{x} 5.1.4 d. 希腊字母与特殊符号 小写希腊字母：\\alpha, \\beta, \\gamma 大写希腊字母：\\Gamma, \\Delta 特殊符号：\\infty（无穷），\\partial（偏导），\\nabla（nabla算子） 5.1.5 e. 矩阵与方程组使用 \\begin{bmatrix} 可创建矩阵： markdown $$ \\begin{bmatrix} a \u0026 b \\\\ c \u0026 d \\end{bmatrix} $$ 结果： [abcd] \\begin{bmatrix} a \u0026 b \\\\ c \u0026 d \\end{bmatrix} [ac​bd​]","date":"2025-09-27","objectID":"/zh-cn/menulis-ekspresi-matematika/:5:1","series":null,"tags":["LaTeX","KaTeX"],"title":"在 Markdown 中编写数学表达式","uri":"/zh-cn/menulis-ekspresi-matematika/#c-常见数学运算符"},{"categories":["LaTeX"],"content":" 5.1 常见类型 5.1.1 a. 行内数学公式使用 $...$ 来编写行内公式： markdown $E = mc^2$ $c = \\pm\\sqrt{a^2 + b^2}$ 结果： $E=mc^2$ $c = \\pm\\sqrt{a^2 + b^2}$ 5.1.2 b. 块级数学公式使用 $$...$$ 来书写块级公式： markdown $$ \\int_a^b f(x) \\, dx = F(b) - F(a) $$ 结果： ∫abf(x) dx=F(b)−F(a) \\int_a^b f(x) \\, dx = F(b) - F(a) ∫ab​f(x)dx=F(b)−F(a) 5.1.3 c. 常见数学运算符 加法：x + y 乘法：x \\cdot y 或 x \\times y 分数：\\frac{a}{b} 开方：\\sqrt{x} 5.1.4 d. 希腊字母与特殊符号 小写希腊字母：\\alpha, \\beta, \\gamma 大写希腊字母：\\Gamma, \\Delta 特殊符号：\\infty（无穷），\\partial（偏导），\\nabla（nabla算子） 5.1.5 e. 矩阵与方程组使用 \\begin{bmatrix} 可创建矩阵： markdown $$ \\begin{bmatrix} a \u0026 b \\\\ c \u0026 d \\end{bmatrix} $$ 结果： [abcd] \\begin{bmatrix} a \u0026 b \\\\ c \u0026 d \\end{bmatrix} [ac​bd​]","date":"2025-09-27","objectID":"/zh-cn/menulis-ekspresi-matematika/:5:1","series":null,"tags":["LaTeX","KaTeX"],"title":"在 Markdown 中编写数学表达式","uri":"/zh-cn/menulis-ekspresi-matematika/#d-希腊字母与特殊符号"},{"categories":["LaTeX"],"content":" 5.1 常见类型 5.1.1 a. 行内数学公式使用 $...$ 来编写行内公式： markdown $E = mc^2$ $c = \\pm\\sqrt{a^2 + b^2}$ 结果： $E=mc^2$ $c = \\pm\\sqrt{a^2 + b^2}$ 5.1.2 b. 块级数学公式使用 $$...$$ 来书写块级公式： markdown $$ \\int_a^b f(x) \\, dx = F(b) - F(a) $$ 结果： ∫abf(x) dx=F(b)−F(a) \\int_a^b f(x) \\, dx = F(b) - F(a) ∫ab​f(x)dx=F(b)−F(a) 5.1.3 c. 常见数学运算符 加法：x + y 乘法：x \\cdot y 或 x \\times y 分数：\\frac{a}{b} 开方：\\sqrt{x} 5.1.4 d. 希腊字母与特殊符号 小写希腊字母：\\alpha, \\beta, \\gamma 大写希腊字母：\\Gamma, \\Delta 特殊符号：\\infty（无穷），\\partial（偏导），\\nabla（nabla算子） 5.1.5 e. 矩阵与方程组使用 \\begin{bmatrix} 可创建矩阵： markdown $$ \\begin{bmatrix} a \u0026 b \\\\ c \u0026 d \\end{bmatrix} $$ 结果： [abcd] \\begin{bmatrix} a \u0026 b \\\\ c \u0026 d \\end{bmatrix} [ac​bd​]","date":"2025-09-27","objectID":"/zh-cn/menulis-ekspresi-matematika/:5:1","series":null,"tags":["LaTeX","KaTeX"],"title":"在 Markdown 中编写数学表达式","uri":"/zh-cn/menulis-ekspresi-matematika/#e-矩阵与方程组"},{"categories":["LaTeX"],"content":" 6 更多自定义选项 自定义分隔符（如 \\( ... \\)） 视觉样式：\\mathbf{A}（粗体），\\mathit{A}（斜体） 字体大小控制：\\small, \\large, \\Huge 示例： F=ddtp \\mathbf{F} = \\frac{d}{dt} \\mathit{p} F=dtd​p","date":"2025-09-27","objectID":"/zh-cn/menulis-ekspresi-matematika/:6:0","series":null,"tags":["LaTeX","KaTeX"],"title":"在 Markdown 中编写数学表达式","uri":"/zh-cn/menulis-ekspresi-matematika/#更多自定义选项"},{"categories":["LaTeX"],"content":" 7 示例与结果行内示例：$E = mc^2$ 块级示例： ∫abf(x) dx=F(b)−F(a) \\int_a^b f(x) \\, dx = F(b) - F(a) ∫ab​f(x)dx=F(b)−F(a)矩阵示例： [1234] \\begin{bmatrix} 1 \u0026 2 \\\\ 3 \u0026 4 \\end{bmatrix} [13​24​]希腊符号：$\\alpha$, $\\beta$, $\\gamma$ ","date":"2025-09-27","objectID":"/zh-cn/menulis-ekspresi-matematika/:7:0","series":null,"tags":["LaTeX","KaTeX"],"title":"在 Markdown 中编写数学表达式","uri":"/zh-cn/menulis-ekspresi-matematika/#示例与结果"},{"categories":["LaTeX"],"content":" 8 结论使用 KaTeX，您可以在 Markdown 中轻松编写高质量数学表达式。 配置简单、语法广泛支持，使其成为展示在线数学内容的理想选择。 👉 想学习更多 LaTeX 知识？请访问 LaTeX 学习手册。 ","date":"2025-09-27","objectID":"/zh-cn/menulis-ekspresi-matematika/:8:0","series":null,"tags":["LaTeX","KaTeX"],"title":"在 Markdown 中编写数学表达式","uri":"/zh-cn/menulis-ekspresi-matematika/#结论"},{"categories":["Markdown"],"content":"本文介绍了在 Hugo 内容文件中可使用的 Markdown 基本语法示例。","date":"2025-09-01","objectID":"/zh-cn/sintaks-markdown-dasar/","series":null,"tags":["Markdown","HTML"],"title":"Markdown 基础语法","uri":"/zh-cn/sintaks-markdown-dasar/"},{"categories":["Markdown"],"content":"本文介绍了在 Hugo 内容文件中可使用的 Markdown 基本语法示例。 注意 本文内容转载自 Grav 原始页面。 如需更完整的说明，请参阅页面 Markdown 语法。 为网络撰写内容是一项艰巨的任务。虽然 WYSIWYG 编辑器在一定程度上减轻了负担，但它们通常会生成复杂或杂乱的 HTML 页面。 Markdown 是一种更简洁的方式，用纯文本来编写 HTML，没有传统格式的繁琐与缺陷。 Markdown 的主要优点包括： Markdown 易学、符号少，写作效率高。 减少语法错误的可能性。 输出有效的 XHTML 代码。 内容与样式分离，不会破坏网页的整体外观。 可以使用任何文本编辑器或 Markdown 应用程序编写。 Markdown 作者 John Gruber 如此说道： Markdown 的主要设计目标是让格式化文本尽可能易读。 其理念是：即使不进行渲染，Markdown 文档本身也应像普通文本一样自然可读。 Markdown 的语法受到一些文本到 HTML 过滤器的启发，但最主要的灵感来自传统纯文本电子邮件的格式。 – John Gruber 接下来，让我们一起了解 Markdown 的主要元素，以及它们在 HTML 中的呈现方式！ 技巧 😄 收藏此页面，方便日后参考！ ","date":"2025-09-01","objectID":"/zh-cn/sintaks-markdown-dasar/:0:0","series":null,"tags":["Markdown","HTML"],"title":"Markdown 基础语法","uri":"/zh-cn/sintaks-markdown-dasar/#"},{"categories":["Markdown"],"content":" 13 1 标题（Headings）从 h2 到 h6 的标题通过在文本前添加 # 来实现： markdown ## h2 标题 ### h3 标题 #### h4 标题 ##### h5 标题 ###### h6 标题 生成的 HTML 如下： html \u003ch2\u003eh2 标题\u003c/h2\u003e \u003ch3\u003eh3 标题\u003c/h3\u003e \u003ch4\u003eh4 标题\u003c/h4\u003e \u003ch5\u003eh5 标题\u003c/h5\u003e \u003ch6\u003eh6 标题\u003c/h6\u003e 自定义标题 ID 为标题添加自定义 ID，只需在标题末尾加上花括号： markdown ### 大标题 {#custom-id} 生成的 HTML 如下： html \u003ch3 id=\"custom-id\"\u003e大标题\u003c/h3\u003e ","date":"2025-09-01","objectID":"/zh-cn/sintaks-markdown-dasar/:1:0","series":null,"tags":["Markdown","HTML"],"title":"Markdown 基础语法","uri":"/zh-cn/sintaks-markdown-dasar/#1-标题headings"},{"categories":["Markdown"],"content":" 14 2 注释（Comments）Markdown 中的注释使用 HTML 语法。 html \u003c!-- 这是注释 --\u003e 下面的注释 不会显示： ","date":"2025-09-01","objectID":"/zh-cn/sintaks-markdown-dasar/:2:0","series":null,"tags":["Markdown","HTML"],"title":"Markdown 基础语法","uri":"/zh-cn/sintaks-markdown-dasar/#2-注释comments"},{"categories":["Markdown"],"content":" 15 3 分隔线（Horizontal Rules）在 Markdown 中，可以使用以下任意方式创建 \u003chr\u003e： ___：三个下划线 ---：三个短横线 ***：三个星号 结果如下： ","date":"2025-09-01","objectID":"/zh-cn/sintaks-markdown-dasar/:3:0","series":null,"tags":["Markdown","HTML"],"title":"Markdown 基础语法","uri":"/zh-cn/sintaks-markdown-dasar/#3-分隔线horizontal-rules"},{"categories":["Markdown"],"content":" 16 4 段落（Paragraphs）普通文本会被包裹在 \u003cp\u003e\u003c/p\u003e 标签中： markdown 这是一个段落。 输出的 HTML： html \u003cp\u003e这是一个段落。\u003c/p\u003e ","date":"2025-09-01","objectID":"/zh-cn/sintaks-markdown-dasar/:4:0","series":null,"tags":["Markdown","HTML"],"title":"Markdown 基础语法","uri":"/zh-cn/sintaks-markdown-dasar/#4-段落paragraphs"},{"categories":["Markdown"],"content":" 17 5 内联 HTML如果需要使用特定 HTML 标签（带 class），可直接写入 HTML： html Markdown 段落。 \u003cdiv class=\"class\"\u003e 这里是 \u003cb\u003eHTML\u003c/b\u003e \u003c/div\u003e Markdown 段落。 ","date":"2025-09-01","objectID":"/zh-cn/sintaks-markdown-dasar/:5:0","series":null,"tags":["Markdown","HTML"],"title":"Markdown 基础语法","uri":"/zh-cn/sintaks-markdown-dasar/#5-内联-html"},{"categories":["Markdown"],"content":" 18 6 文本强调（Emphasis）","date":"2025-09-01","objectID":"/zh-cn/sintaks-markdown-dasar/:6:0","series":null,"tags":["Markdown","HTML"],"title":"Markdown 基础语法","uri":"/zh-cn/sintaks-markdown-dasar/#6-文本强调emphasis"},{"categories":["Markdown"],"content":" 18.1 加粗（Bold） markdown **加粗文本** __加粗文本__ HTML 输出： html \u003cstrong\u003e加粗文本\u003c/strong\u003e ","date":"2025-09-01","objectID":"/zh-cn/sintaks-markdown-dasar/:6:1","series":null,"tags":["Markdown","HTML"],"title":"Markdown 基础语法","uri":"/zh-cn/sintaks-markdown-dasar/#加粗bold"},{"categories":["Markdown"],"content":" 18.2 斜体（Italic） markdown *斜体文本* _斜体文本_ HTML 输出： html \u003cem\u003e斜体文本\u003c/em\u003e ","date":"2025-09-01","objectID":"/zh-cn/sintaks-markdown-dasar/:6:2","series":null,"tags":["Markdown","HTML"],"title":"Markdown 基础语法","uri":"/zh-cn/sintaks-markdown-dasar/#斜体italic"},{"categories":["Markdown"],"content":" 18.3 删除线（Strikethrough） markdown ~~带删除线的文本~~ HTML 输出： html \u003cdel\u003e带删除线的文本\u003c/del\u003e ","date":"2025-09-01","objectID":"/zh-cn/sintaks-markdown-dasar/:6:3","series":null,"tags":["Markdown","HTML"],"title":"Markdown 基础语法","uri":"/zh-cn/sintaks-markdown-dasar/#删除线strikethrough"},{"categories":["Markdown"],"content":" 18.4 组合使用 markdown ***加粗并斜体*** ~~**删除线加粗**~~ ~~*删除线斜体*~~ ~~***加粗、斜体和删除线***~~ ","date":"2025-09-01","objectID":"/zh-cn/sintaks-markdown-dasar/:6:4","series":null,"tags":["Markdown","HTML"],"title":"Markdown 基础语法","uri":"/zh-cn/sintaks-markdown-dasar/#组合使用"},{"categories":["Markdown"],"content":" 19 7 引用块（Blockquotes）使用 \u003e 添加引用： markdown \u003e 这是一个引用块。 嵌套引用： markdown \u003e 第一层 \u003e\u003e 第二层 ","date":"2025-09-01","objectID":"/zh-cn/sintaks-markdown-dasar/:7:0","series":null,"tags":["Markdown","HTML"],"title":"Markdown 基础语法","uri":"/zh-cn/sintaks-markdown-dasar/#7-引用块blockquotes"},{"categories":["Markdown"],"content":" 20 8 列表（Lists）","date":"2025-09-01","objectID":"/zh-cn/sintaks-markdown-dasar/:8:0","series":null,"tags":["Markdown","HTML"],"title":"Markdown 基础语法","uri":"/zh-cn/sintaks-markdown-dasar/#8-列表lists"},{"categories":["Markdown"],"content":" 20.1 无序列表 markdown * 第一项 - 第二项 + 第三项 ","date":"2025-09-01","objectID":"/zh-cn/sintaks-markdown-dasar/:8:1","series":null,"tags":["Markdown","HTML"],"title":"Markdown 基础语法","uri":"/zh-cn/sintaks-markdown-dasar/#无序列表"},{"categories":["Markdown"],"content":" 20.2 有序列表 markdown 1. 第一项 2. 第二项 3. 第三项 ","date":"2025-09-01","objectID":"/zh-cn/sintaks-markdown-dasar/:8:2","series":null,"tags":["Markdown","HTML"],"title":"Markdown 基础语法","uri":"/zh-cn/sintaks-markdown-dasar/#有序列表"},{"categories":["Markdown"],"content":" 20.3 任务列表 markdown - [x] 已完成 - [ ] 未完成 ","date":"2025-09-01","objectID":"/zh-cn/sintaks-markdown-dasar/:8:3","series":null,"tags":["Markdown","HTML"],"title":"Markdown 基础语法","uri":"/zh-cn/sintaks-markdown-dasar/#任务列表"},{"categories":["Markdown"],"content":" 21 9 代码（Code）","date":"2025-09-01","objectID":"/zh-cn/sintaks-markdown-dasar/:9:0","series":null,"tags":["Markdown","HTML"],"title":"Markdown 基础语法","uri":"/zh-cn/sintaks-markdown-dasar/#9-代码code"},{"categories":["Markdown"],"content":" 21.1 行内代码 markdown 在此例中，`\u003csection\u003e\u003c/section\u003e` 将被包裹为代码。 ","date":"2025-09-01","objectID":"/zh-cn/sintaks-markdown-dasar/:9:1","series":null,"tags":["Markdown","HTML"],"title":"Markdown 基础语法","uri":"/zh-cn/sintaks-markdown-dasar/#行内代码"},{"categories":["Markdown"],"content":" 21.2 多行代码块 markdown ```js console.log(\"Hello Markdown!\"); text ## 10 表格（Tables） ```markdown | 选项 | 描述 | | ---- | ---- | | data | 数据文件路径 | | engine | 模板引擎 | | ext | 文件扩展名 | 输出如下： 选项 描述 data 数据文件路径 engine 模板引擎 ext 文件扩展名 ","date":"2025-09-01","objectID":"/zh-cn/sintaks-markdown-dasar/:9:2","series":null,"tags":["Markdown","HTML"],"title":"Markdown 基础语法","uri":"/zh-cn/sintaks-markdown-dasar/#多行代码块"},{"categories":["Markdown"],"content":" 22 11 链接（Links） markdown \u003chttps://assemble.io\u003e [Assemble](https://assemble.io) ","date":"2025-09-01","objectID":"/zh-cn/sintaks-markdown-dasar/:10:0","series":null,"tags":["Markdown","HTML"],"title":"Markdown 基础语法","uri":"/zh-cn/sintaks-markdown-dasar/#11-链接links"},{"categories":["Markdown"],"content":" 23 12 脚注（Footnotes） markdown 这是脚注示例 [^1] [^1]: 这里是脚注说明。 ","date":"2025-09-01","objectID":"/zh-cn/sintaks-markdown-dasar/:11:0","series":null,"tags":["Markdown","HTML"],"title":"Markdown 基础语法","uri":"/zh-cn/sintaks-markdown-dasar/#12-脚注footnotes"},{"categories":["Markdown"],"content":" 24 13 图片（Images） markdown ![小黄人](https://octodex.github.com/images/minion.png) ![Stormtroopocat](https://octodex.github.com/images/stormtroopocat.jpg) ![Dojocat](https://octodex.github.com/images/dojocat.jpg) 本文到此结束，希望对你有所帮助！😙 ","date":"2025-09-01","objectID":"/zh-cn/sintaks-markdown-dasar/:12:0","series":null,"tags":["Markdown","HTML"],"title":"Markdown 基础语法","uri":"/zh-cn/sintaks-markdown-dasar/#13-图片images"},{"categories":["Linux"],"content":"本文探讨 BSD 和 GNU/Linux 操作系统的区别。","date":"2025-10-17","objectID":"/zh-cn/bsd-linux/","series":null,"tags":["操作系统","Linux"],"title":"BSD 与 Linux 的区别","uri":"/zh-cn/bsd-linux/"},{"categories":["Linux"],"content":"本文探讨 BSD 和 GNU/Linux 操作系统的区别。 注意 谈及历史上最具影响力的操作系统时，你不可能不提到 Unix、Linux 和 BSD。我们的现代世界离不开这些操作系统。 尽管它们在基本原则和功能上存在相似之处，但也存在明显的差异将它们区分开来。 因此，在本文中，我们的目标是阐释和比较这些操作系统，探讨它们的起源、特性和用途。 让我们开始吧。 ","date":"2025-10-17","objectID":"/zh-cn/bsd-linux/:0:0","series":null,"tags":["操作系统","Linux"],"title":"BSD 与 Linux 的区别","uri":"/zh-cn/bsd-linux/#"},{"categories":["Linux"],"content":" 最具影响力的操作系统：Unix、BSD 和 Linux谈及历史上最具影响力的操作系统，不可能不提到 Unix、BSD 和 Linux。我们的现代世界，从互联网到移动设备，都建立在它们奠定的基础之上。这三者共享多用户、多任务、模块化等基本原则，但又各自演化出独特的特性，彼此区分。 本文将阐释 Unix、BSD 和 Linux 的起源、特性及用途，并比较它们在现代计算领域中的角色。 ","date":"2025-10-17","objectID":"/zh-cn/bsd-linux/:0:0","series":null,"tags":["操作系统","Linux"],"title":"BSD 与 Linux 的区别","uri":"/zh-cn/bsd-linux/#最具影响力的操作系统unixbsd-和-linux"},{"categories":["Linux"],"content":" 1 Unix：现代操作系统的基石Unix 诞生于 1960 年代末的 AT\u0026T 贝尔实验室，由 Ken Thompson 和 Dennis Ritchie 领导开发。他们创建了一个简单而强大的多用户、多任务操作系统。 Unix 的设计原则——简洁性、模块化、层级文件系统——成为其后许多操作系统开发的基础。其关键创新之一是 “管道”，它允许一个程序的输出作为另一个程序的输入，大大增强了命令行的灵活性。 Unix 在 1970 至 1980 年代迅速发展，被大学、研究机构和公司广泛采用。其可移植性（得益于使用 C 语言重写）使其成为行业标准。从 Unix 衍生出了许多商业变体（如 Solaris、HP-UX、AIX），也启发了像 BSD 和 Linux 这样的开源系统。 此外，Unix 还催生了 POSIX（可移植操作系统接口） 标准，确保了现代操作系统之间的兼容性。 ","date":"2025-10-17","objectID":"/zh-cn/bsd-linux/:1:0","series":null,"tags":["操作系统","Linux"],"title":"BSD 与 Linux 的区别","uri":"/zh-cn/bsd-linux/#unix现代操作系统的基石"},{"categories":["Linux"],"content":" 2 BSD：来自伯克林的创新BSD（伯克利软件发行版） 于 1970 年代末在加州大学伯克利分校诞生，最初是对 Unix 源代码的增强。BSD 贡献了多项重要创新，例如： TCP/IP 协议栈，现代互联网的主要基石。 vi 编辑器，至今仍然流行。 ","date":"2025-10-17","objectID":"/zh-cn/bsd-linux/:2:0","series":null,"tags":["操作系统","Linux"],"title":"BSD 与 Linux 的区别","uri":"/zh-cn/bsd-linux/#bsd来自伯克林的创新"},{"categories":["Linux"],"content":" 2.1 现代 BSD 变体BSD 发展成为一个独立的生态系统，主要衍生版本包括： FreeBSD – 专注于性能与可扩展性，常用于服务器和嵌入式系统。 OpenBSD – 强调安全性与代码审计，广泛用于防火墙和网络基础设施。 NetBSD – 以可移植性著称，几乎可以在任何硬件架构上运行。 BSD 也是一些重要技术的基础：Darwin（macOS 和 iOS 的内核），以及 PlayStation 4 的操作系统。 BSD 与 Linux 的一个区别在于其许可证。BSD 许可证 比 Linux 的 GPL 更为宽松，因此公司可以采用 BSD 代码而无需公开其修改——这也是 Apple 选择 BSD 作为 macOS 基础的原因之一。 ","date":"2025-10-17","objectID":"/zh-cn/bsd-linux/:2:1","series":null,"tags":["操作系统","Linux"],"title":"BSD 与 Linux 的区别","uri":"/zh-cn/bsd-linux/#现代-bsd-变体"},{"categories":["Linux"],"content":" 3 Linux：面向所有人的开源系统Linux 诞生于 1991 年，由赫尔辛基大学的 Linus Torvalds 创建。与 BSD 不同，Linux 并非直接源自 Unix 代码，而是从零开始编写，并以 Unix 哲学为灵感。 Linux 兼容 Unix 标准（POSIX），采用模块化设计，并在 GNU 通用公共许可证（GPL） 下成为开源软件。 ","date":"2025-10-17","objectID":"/zh-cn/bsd-linux/:3:0","series":null,"tags":["操作系统","Linux"],"title":"BSD 与 Linux 的区别","uri":"/zh-cn/bsd-linux/#linux面向所有人的开源系统"},{"categories":["Linux"],"content":" 3.1 与 GNU 的整合在 Linux 诞生之前，GNU 项目（由 Richard Stallman 于 1983 年发起）已经提供了许多重要组件： GNU 编译器集合（GCC） GNU C 库（glibc） GNU 核心工具 但 GNU 缺少一个功能完整的内核。Linux 内核填补了这一空白，因此 GNU/Linux 的组合形成了一个完整、自由的操作系统。 ","date":"2025-10-17","objectID":"/zh-cn/bsd-linux/:3:1","series":null,"tags":["操作系统","Linux"],"title":"BSD 与 Linux 的区别","uri":"/zh-cn/bsd-linux/#与-gnu-的整合"},{"categories":["Linux"],"content":" 3.2 Linux 的主导地位如今，Linux： 占据了全球 超过 95% 的超级计算机 成为 Android（最流行的智能手机操作系统）的核心 运行着绝大多数 网络服务器和云计算 平台 应用于物联网、嵌入式设备乃至桌面环境 流行的发行版包括 Ubuntu、Debian、Fedora、Arch Linux 和 Red Hat Enterprise Linux。 ","date":"2025-10-17","objectID":"/zh-cn/bsd-linux/:3:2","series":null,"tags":["操作系统","Linux"],"title":"BSD 与 Linux 的区别","uri":"/zh-cn/bsd-linux/#linux-的主导地位"},{"categories":["Linux"],"content":" 4 内核与架构这三个系统都使用单内核，但方法有所不同： Unix：管理所有服务和硬件的大型内核。 BSD：单内核，但包含增强功能，如 ZFS 文件系统、优化的网络栈，以及如强制访问控制（MAC） 等安全特性。 Linux：模块化的单内核，因此驱动程序和功能可以根据需要加载或卸载。这使得 Linux 能够灵活适用于各种设备，从物联网到超级计算机。 ","date":"2025-10-17","objectID":"/zh-cn/bsd-linux/:4:0","series":null,"tags":["操作系统","Linux"],"title":"BSD 与 Linux 的区别","uri":"/zh-cn/bsd-linux/#内核与架构"},{"categories":["Linux"],"content":" 5 生态系统与社区 Unix：如今更多以商业变体（Solaris, AIX）的形式存在于拥有遗留系统的企业中。 BSD：社区规模较小但专注，以代码质量和文档著称。 Linux：拥有最大的生态系统，拥有数千个发行版和活跃的全球社区。 ","date":"2025-10-17","objectID":"/zh-cn/bsd-linux/:5:0","series":null,"tags":["操作系统","Linux"],"title":"BSD 与 Linux 的区别","uri":"/zh-cn/bsd-linux/#生态系统与社区"},{"categories":["Linux"],"content":" 6 用途与考量 Unix → 仍用于拥有遗留系统的大型企业（如银行、电信、航空航天）。 BSD → 适用于防火墙、路由器以及对安全/稳定性要求高的系统。 Linux → 最灵活，应用于云平台、服务器、桌面、物联网乃至超级计算机。 ","date":"2025-10-17","objectID":"/zh-cn/bsd-linux/:6:0","series":null,"tags":["操作系统","Linux"],"title":"BSD 与 Linux 的区别","uri":"/zh-cn/bsd-linux/#用途与考量"},{"categories":["Linux"],"content":" 7 互操作性与兼容性三者共享相同的传统，因此许多应用程序可以轻松地跨系统移植，尤其是用 C/C++ 编写的程序。核心命令行工具（如 ls、grep、awk）也相似，因此一个系统的用户相对容易适应其他系统。 ","date":"2025-10-17","objectID":"/zh-cn/bsd-linux/:7:0","series":null,"tags":["操作系统","Linux"],"title":"BSD 与 Linux 的区别","uri":"/zh-cn/bsd-linux/#互操作性与兼容性"},{"categories":["Linux"],"content":" 8 Unix、BSD 和 Linux 对比表 方面 Unix BSD Linux 起源 1969年，AT\u0026T 贝尔实验室 1977年，加州大学伯克利分校，源自 Unix 1991年，Linus Torvalds，独立开发 许可证 专有（AT\u0026T, 商业） BSD 许可证（宽松） GPL（著佐权，开源） 侧重点 商业系统，稳定性 网络，安全性，可移植性 灵活性，社区，开源 变体/发行版 Solaris, AIX, HP-UX FreeBSD, OpenBSD, NetBSD Ubuntu, Debian, Fedora, RHEL, Arch 主要用途 企业，关键任务系统 服务器，防火墙，macOS 和 PS4 的基础 OS 云平台，服务器，桌面，Android，物联网 现状 受限，主导地位下降 小众但重要（安全与研究领域） 全球主导，生态系统广泛 ","date":"2025-10-17","objectID":"/zh-cn/bsd-linux/:8:0","series":null,"tags":["操作系统","Linux"],"title":"BSD 与 Linux 的区别","uri":"/zh-cn/bsd-linux/#unixbsd-和-linux-对比表"},{"categories":["Linux"],"content":" 9 结论Unix、BSD 和 Linux 不仅仅是操作系统，更是现代数字世界的支柱。 Unix 通过其设计原则和 POSIX 标准奠定了基础。 BSD 贡献了关键创新，尤其是在网络和安全方面。 Linux 通过开源模式将其影响力扩展到全球，从全球服务器到我们口袋里的智能手机。 它们共同构成了一个持续推动计算技术发展的生态系统。 ","date":"2025-10-17","objectID":"/zh-cn/bsd-linux/:9:0","series":null,"tags":["操作系统","Linux"],"title":"BSD 与 Linux 的区别","uri":"/zh-cn/bsd-linux/#结论"},{"categories":null,"content":"关于我","date":"2025-09-02","objectID":"/zh-cn/about/","series":null,"tags":null,"title":"关于我","uri":"/zh-cn/about/"},{"categories":null,"content":" السلام عليكم…… 嗨，欢迎来到我的博客。这个博客是我用来记录自己在学习计算机操作系统（如 GNU/Linux、BSD）以及 LaTeX 方面的学习笔记。 此外，我还运营着几个博客并撰写有关 LaTeX 的书籍，包括： 数学学习博客 数字作品集 LaTeX 电子书 我真心希望这个简单的博客能够为我自己以及广大读者带来一些益处，使我们所获得的知识能够用来造福他人。 对于本博客的改进，任何想法、建议或批评都非常欢迎。您可以通过“联系”页面或作者在博客中列出的社交媒体与我取得联系。 以上就是我想要分享的内容。让我们一起继续学习、创作，为共同的善意努力。谢谢。 此致敬礼。 安特里奥诺（Aan Triono） ","date":"2025-09-02","objectID":"/zh-cn/about/:0:0","series":null,"tags":null,"title":"关于我","uri":"/zh-cn/about/#"},{"categories":null,"content":" 主题文档 - 基本概念 探索 Hugo - DoIt 主题的全部内容和背后的核心概念 阅读全文 主题文档 - 内容 了解如何在 DoIt 主题中快速, 直观地创建和组织内容 阅读全文 主题文档 - 扩展 Shortcodes DoIt 主题在 Hugo 内置的 shortcode 的基础上提供多个扩展的 shortcode 阅读全文 ","date":"2021-11-01","objectID":"/zh-cn/showcase/:0:0","series":null,"tags":null,"title":"作品","uri":"/zh-cn/showcase/#"}]